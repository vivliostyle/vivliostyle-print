{"version":3,"file":"bundle.js","sources":["../node_modules/fast-diff/diff.js","../node_modules/@vivliostyle/core/src/vivliostyle/constants.ts","../node_modules/@vivliostyle/core/src/vivliostyle/logging.ts","../node_modules/@vivliostyle/core/src/vivliostyle/plugin.ts","../node_modules/@vivliostyle/core/src/vivliostyle/profile.ts","../node_modules/@vivliostyle/core/src/vivliostyle/base.ts","../node_modules/@vivliostyle/core/src/vivliostyle/cfi.ts","../node_modules/@vivliostyle/core/src/vivliostyle/exprs.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css.ts","../node_modules/@vivliostyle/core/src/vivliostyle/geometry-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-prop.ts","../node_modules/@vivliostyle/core/src/vivliostyle/counters.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-tokenizer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/net.ts","../node_modules/@vivliostyle/core/src/vivliostyle/assets.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-parser.ts","../node_modules/@vivliostyle/core/src/vivliostyle/matchers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/types.ts","../node_modules/@vivliostyle/core/src/vivliostyle/diff.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vtree.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-cascade.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-logical-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sizing.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-floats.ts","../node_modules/@vivliostyle/core/src/vivliostyle/footnotes.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-helper.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break-position.ts","../node_modules/@vivliostyle/core/src/vivliostyle/display.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-processor.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-retryers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/shared.ts","../node_modules/@vivliostyle/core/src/vivliostyle/pseudo-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout.ts","../node_modules/@vivliostyle/core/src/vivliostyle/repetitive-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/table.ts","../node_modules/@vivliostyle/core/src/vivliostyle/math-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/columns.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-validator.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-styler.ts","../node_modules/@vivliostyle/core/src/vivliostyle/font.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-master.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-page.ts","../node_modules/@vivliostyle/core/src/vivliostyle/urls.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vgen.ts","../node_modules/@vivliostyle/core/src/vivliostyle/xml-doc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/ops.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sha1.ts","../node_modules/@vivliostyle/core/src/vivliostyle/toc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/epub.ts","../node_modules/@vivliostyle/core/src/vivliostyle/adaptive-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/core-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/print.ts","index.js"],"sourcesContent":["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 !== 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length && y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length && y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i), shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i), shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a, best_longtext_b,\n        best_shorttext_a, best_shorttext_b, best_common\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\n            diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n};\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after]\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange = typeof cursor_pos === 'number' ?\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === 'number' ?\n    null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (\n  p1: Base.JSON,\n) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n */\nexport function registerHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    hooksForName.push(fn);\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\n      \"registerStartTiming\"\n    ] = this.registerStartTiming = registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern = /^[\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:\\p{Zs}*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r = /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n      url,\n    ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r = /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n      url,\n    ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r = /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n      url,\n    ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r = /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n      url,\n    ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\n/**\n * @return ?string\n */\nexport function asString(v: any): any {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\n/**\n * @param prefix Prefix (containing leading and trailing hyphens)\n * @param cssPropName CSS property name\n * @return JavaScript property name\n */\nexport function cssToJSProp(prefix: string, cssPropName: string): string {\n  if (prefix) {\n    cssPropName = `-${cssPropName}`;\n    prefix = prefix.replace(/-/g, \"\");\n    if (prefix === \"moz\") {\n      prefix = \"Moz\";\n    }\n  }\n  return (\n    prefix +\n    cssPropName.replace(/-[a-z]/g, (txt) => txt.substr(1).toUpperCase())\n  );\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\", \"-ms-\", \"-o-\", \"-epub-\"];\n\nexport const propNameMap = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  // Special case\n  if (prop === \"writing-mode\") {\n    const probe = document.createElement(\"span\");\n    if (prefix === \"-ms-\") {\n      probe.style.setProperty(prefix + prop, \"tb-rl\");\n      return probe.style[\"writing-mode\"] === \"tb-rl\";\n    } else {\n      probe.style.setProperty(prefix + prop, \"vertical-rl\");\n      return probe.style[prefix + prop] === \"vertical-rl\";\n    }\n  } else {\n    const style = document.documentElement.style;\n    return typeof style[cssToJSProp(prefix, prop)] === \"string\";\n  }\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n    case \"writing-mode\":\n      // Special case: prefer '-ms-writing-mode' to 'writing-mode'\n      if (checkIfPropertySupported(\"-ms-\", \"writing-mode\")) {\n        propNameMap[prop] = [\"-ms-writing-mode\"];\n        return [\"-ms-writing-mode\"];\n      }\n      break;\n    case \"filter\":\n      // Special case: prefer '-webkit-filter' to 'filter'\n      if (checkIfPropertySupported(\"-webkit-\", \"filter\")) {\n        propNameMap[prop] = [\"-webkit-filter\"];\n        return [\"-webkit-filter\"];\n      }\n      break;\n    case \"clip-path\":\n      // Special case for chrome.\n      if (checkIfPropertySupported(\"-webkit-\", \"clip-path\")) {\n        return (propNameMap[prop] = [\"-webkit-clip-path\", \"clip-path\"]);\n      }\n      break;\n    case \"margin-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-start\")) {\n        propNameMap[prop] = [\"-webkit-margin-start\"];\n        return [\"-webkit-margin-start\"];\n      }\n      break;\n    case \"margin-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-end\")) {\n        propNameMap[prop] = [\"-webkit-margin-end\"];\n        return [\"-webkit-margin-end\"];\n      }\n      break;\n    case \"padding-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-start\")) {\n        propNameMap[prop] = [\"-webkit-padding-start\"];\n        return [\"-webkit-padding-start\"];\n      }\n      break;\n    case \"padding-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-end\")) {\n        propNameMap[prop] = [\"-webkit-padding-end\"];\n        return [\"-webkit-padding-end\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = prefix + prop;\n      propNameMap[prop] = [prefixed];\n      return [prefixed];\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  try {\n    const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n    if (!prefixedPropertyNames) {\n      return;\n    }\n    prefixedPropertyNames.forEach((prefixed) => {\n      if (prefixed === \"-ms-writing-mode\") {\n        switch (value) {\n          case \"horizontal-tb\":\n            value = \"lr-tb\";\n            break;\n          case \"vertical-rl\":\n            value = \"tb-rl\";\n            break;\n          case \"vertical-lr\":\n            value = \"tb-lr\";\n            break;\n        }\n      } else if (prefixed === \"-webkit-text-combine\") {\n        switch (value) {\n          case \"all\":\n            value = \"horizontal\";\n            break;\n        }\n      }\n      if (elem && (elem as HTMLElement).style) {\n        (elem as HTMLElement).style.setProperty(prefixed, value);\n      }\n    });\n  } catch (err) {\n    Logging.logger.warn(err);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      list.push(listener);\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport let hasLShapeFloatBug: boolean | null = null;\n\n/**\n * Check if there is a bug with L-shape floats overlapping text.\n */\nexport function checkLShapeFloatBug(body: HTMLElement): boolean {\n  if (hasLShapeFloatBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    body.appendChild(container);\n    const f1 = doc.createElement(\"div\") as HTMLElement;\n    f1.style.width = \"0px\";\n    f1.style.height = \"14px\";\n    f1.style.cssFloat = \"left\";\n    container.appendChild(f1);\n    const f2 = doc.createElement(\"div\") as HTMLElement;\n    f2.style.width = \"50px\";\n    f2.style.height = \"50px\";\n    f2.style.cssFloat = \"left\";\n    f2.style.clear = \"left\";\n    container.appendChild(f2);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const leftEdge = range.getBoundingClientRect().left;\n    hasLShapeFloatBug = leftEdge < 40;\n    body.removeChild(container);\n  }\n  return hasLShapeFloatBug;\n}\n\nexport let hasVerticalBBoxBug: boolean | null = null;\n\n/**\n * Check if there is a bug with the bounding boxes of vertical text characters.\n * Though method used to be used check Chrome bug, it seems that the bug has\n * been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method to check Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function checkVerticalBBoxBug(body: HTMLElement): boolean {\n  if (hasVerticalBBoxBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    setCSSProperty(container, \"writing-mode\", \"vertical-rl\");\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const box = range.getBoundingClientRect();\n    hasVerticalBBoxBug = box.right - box.left < 10;\n    body.removeChild(container);\n  }\n  return hasVerticalBBoxBug;\n}\n\nexport let hasInlineBlockJustificationBug: boolean | null = null;\n\nexport function checkInlineBlockJustificationBug(body: HTMLElement): boolean {\n  if (hasInlineBlockJustificationBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"30px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a | \");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"30px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 3);\n    const box = range.getBoundingClientRect();\n    hasInlineBlockJustificationBug = box.right < 27;\n    body.removeChild(container);\n  }\n  return hasInlineBlockJustificationBug;\n}\n\nexport let hasSoftWrapOpportunityAfterHyphenBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityAfterHyphenBug(\n  body: HTMLElement,\n): boolean {\n  if (hasSoftWrapOpportunityAfterHyphenBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityAfterHyphenBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityAfterHyphenBug;\n}\n\nexport let hasSoftWrapOpportunityByWbrBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityByWbrBug(body: HTMLElement): boolean {\n  if (hasSoftWrapOpportunityByWbrBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    container.appendChild(doc.createElement(\"wbr\"));\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityByWbrBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityByWbrBug;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      throw new Error(\"E_CFI_ID_MISMATCH\");\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  fontSize: () => number;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    context.storeVal(this.scope, this.key, result);\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"-\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"&&\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"||\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \", \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"==\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"+\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" - \";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"*\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"/\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"%\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit.toLowerCase();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  // FIXME: This property is added to reduce TypeScript error on `dependCore`\n  // but it is never initialized. Is it really correct code?\n  value: Val;\n\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  /**\n   * @return void\n   */\n  visitValues(values: Val[]): any {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n  }\n\n  visitEmpty(empty: Val): Val {\n    throw new Error(\"E_CSS_EMPTY_NOT_ALLOWED\");\n  }\n\n  visitSlash(slash: Val): Val {\n    throw new Error(\"E_CSS_SLASH_NOT_ALLOWED\");\n  }\n\n  visitStr(str: Str): Val {\n    throw new Error(\"E_CSS_STR_NOT_ALLOWED\");\n  }\n\n  visitIdent(ident: Ident): Val {\n    throw new Error(\"E_CSS_IDENT_NOT_ALLOWED\");\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    throw new Error(\"E_CSS_NUMERIC_NOT_ALLOWED\");\n  }\n\n  visitNum(num: Num): Val {\n    throw new Error(\"E_CSS_NUM_NOT_ALLOWED\");\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitColor(color: Color): Val {\n    throw new Error(\"E_CSS_COLOR_NOT_ALLOWED\");\n  }\n\n  visitURL(url: URL): Val {\n    throw new Error(\"E_CSS_URL_NOT_ALLOWED\");\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    throw new Error(\"E_CSS_LIST_NOT_ALLOWED\");\n  }\n\n  visitCommaList(list: CommaList): Val {\n    throw new Error(\"E_CSS_COMMA_NOT_ALLOWED\");\n  }\n\n  visitFunc(func: Func): Val {\n    throw new Error(\"E_CSS_FUNC_NOT_ALLOWED\");\n  }\n\n  visitExpr(expr: Expr): Val {\n    throw new Error(\"E_CSS_EXPR_NOT_ALLOWED\");\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  constructor() {\n    super();\n  }\n\n  visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Str): Val {\n    return str;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Num): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Int): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Color): Val {\n    return color;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: URL): Val {\n    return url;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: any): any {\n    throw new Error(\"F_ABSTRACT\");\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitIdent(this);\n  }\n\n  /**\n   * @override\n   */\n  isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit.toLowerCase(); // units are case-insensitive in CSS\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNumeric(this);\n  }\n\n  /**\n   * @override\n   */\n  isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNum(this);\n  }\n\n  /**\n   * @override\n   */\n  isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class Color extends Val {\n  constructor(public rgb: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    const str = this.rgb.toString(16);\n    buf.append(\"000000\".substr(str.length));\n    buf.append(str);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURL(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0].appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i].appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSpaceList(this);\n  }\n\n  /**\n   * @override\n   */\n  isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"-epubx-expr(\");\n    this.expr.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitExpr(this);\n  }\n\n  /**\n   * @override\n   */\n  isExpr(): boolean {\n    return true;\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  color: 2,\n};\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  /** @override */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  /** @override */\n  visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /**\n   * @override\n   */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /**\n   * @override\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /**\n   * @override\n   */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * @override\n   */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.offset;\n        const pageLastOffset = Math.max(\n          pageStartOffset,\n          ...Array.from(\n            currentPage.container.querySelectorAll(\n              `[${Base.ELEMENT_OFFSET_ATTR}]`,\n            ),\n          ).map((e) => parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10)),\n        );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset = currentPage.container.querySelector(\n                    `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                  );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset = currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                    );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(\n    page: Vtree.Page,\n  ): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(expr, val, document) {\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElement(\"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code <= 65535) {\n    return String.fromCharCode(code);\n  }\n  if (code <= 1114111) {\n    // non-BMP characters: convert to a surrogate pair\n    return String.fromCharCode(\n      55296 | ((code >> 10) & 1023),\n      56320 | (code & 1023),\n    );\n  }\n\n  // not a valid Unicode value\n  return \"\\ufffd\";\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{0,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  INVALID,\n  LAST = 51,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.ENDNOTK,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  9 /*tab*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  32 /*sp*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  head: number = -1; // saved, occupied if >= 0\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  mark(): void {\n    if (this.head >= 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL mark\");\n    }\n    this.head = this.curr;\n  }\n\n  reset(): void {\n    if (this.head < 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL reset\");\n    }\n    this.curr = this.head;\n    this.head = -1;\n  }\n\n  unmark(): void {\n    this.head = -1;\n  }\n\n  hasMark(): boolean {\n    return this.head >= 0;\n  }\n\n  private reallocate(): void {\n    const newIndexMask = 2 * (this.indexMask + 1) - 1;\n    const newBuffer: Token[] = Array(newIndexMask + 1);\n    let oldIndex = this.head;\n    let newIndex = 0;\n    while (oldIndex != this.tail) {\n      newBuffer[newIndex] = this.buffer[oldIndex];\n      if (oldIndex == this.curr) {\n        this.curr = newIndex;\n      }\n      oldIndex = (oldIndex + 1) & this.indexMask;\n      newIndex++;\n    }\n    this.head = 0;\n    this.tail = newIndex;\n    this.indexMask = newIndexMask;\n    this.buffer = newBuffer;\n    while (newIndex <= newIndexMask) {\n      newBuffer[newIndex++] = new Token();\n    }\n  }\n\n  private error(position, token, mnemonics) {\n    if (this.handler) {\n      this.handler.error(mnemonics, token);\n    }\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.head >= 0 ? this.head : this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      // only expect to get here when mark is in effect\n      if (this.head < 0) {\n        throw new Error(\"F_CSSTOK_INTERNAL\");\n      }\n      this.reallocate();\n      tail = this.tail;\n      indexMask = this.indexMask;\n      head = indexMask; // this.head is zero\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenType = TokenType.INVALID;\n          if (isNaN(charCode)) {\n            tokenText = \"E_CSS_UNEXPECTED_EOF\";\n          } else {\n            tokenText = \"E_CSS_UNEXPECTED_CHAR\";\n          }\n          actions = actionsNormal;\n          position++;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = input.substring(tokenPosition, position);\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          continue;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   * @return.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /**\n   * @override\n   */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /**\n   * @override\n   */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /**\n   * @override\n   */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /**\n   * @override\n   */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /**\n   * @override\n   */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /**\n   * @override\n   */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src: string): Fetcher<string> {\n  let width: string | null = null;\n  let height: string | null = null;\n  if (elem.localName == \"img\") {\n    width = elem.getAttribute(\"width\");\n    height = elem.getAttribute(\"height\");\n  }\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadImage\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      if (elem.localName == \"img\") {\n        // IE puts these bogus attributes, even if they were not present\n        if (!width) {\n          elem.removeAttribute(\"width\");\n        }\n        if (!height) {\n          elem.removeAttribute(\"height\");\n        }\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof HTMLDocument\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\n/**\n * @return Blob\n */\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): any {\n  const type = opt_type || \"application/octet-stream\";\n  const builderCtr = window[\"WebKitBlobBuilder\"] || window[\"MSBlobBuilder\"]; // deprecated\n  if (builderCtr) {\n    const builder = new builderCtr();\n    for (let i = 0; i < parts.length; i++) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(type);\n  }\n  return new Blob(parts, { type });\n}\n\n/**\n * @return Task.Result.<ArrayBuffer>\n */\nexport function readBlob(blob: Blob): any {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n// vivliostyle-viewport-screen.css\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: -webkit-flex;\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    -webkit-flex: none;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: -webkit-flex;\n    display: flex;\n    -webkit-flex: none;\n    flex: none;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -moz-transform-origin: left top;\n    -ms-transform-origin: left top;\n    -webkit-transform-origin: left top;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row;\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row-reverse;\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    -webkit-flex: none;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n// vivliostyle-viewport.css\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  overflow: hidden;\n  max-width: 100%;\n  max-height: 100%;\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container],\n  [data-vivliostyle-page-container] {\n    -moz-transform: none !important;\n    -ms-transform: none !important;\n    -webkit-transform: none !important;\n    transform: none !important;\n  }\n\n  [data-vivliostyle-page-container] {\n    display: block !important;\n    max-width: 100%;\n    height: 100% !important;\n    max-height: 100%;\n  }\n\n  /* Workaround for Chrome printing problem */\n  /* [data-vivliostyle-page-box] {\n        padding-bottom: 0 !important;\n        overflow: visible !important;\n    } */\n  [data-vivliostyle-bleed-box] > div > div::before {\n    display: block;\n    content: \"\";\n    padding-top: 0.015625px;\n    margin-bottom: -0.015625px;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document regexp('.*') {\n    [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n  }\n}\n`;\n\n// validation.txt\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO | NEGATIVE;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nSCOLOR = HASHCOLOR | aliceblue: #F0F8FF | antiquewhite: #FAEBD7 | aqua: #00FFFF | aquamarine: #7FFFD4 | azure: #F0FFFF |\n    beige: #F5F5DC | bisque: #FFE4C4 | black: #000000 | blanchedalmond: #FFEBCD | blue: #0000FF | blueviolet: #8A2BE2 | brown: #A52A2A |\n    burlywood: #DEB887 | cadetblue: #5F9EA0 | chartreuse: #7FFF00 | chocolate: #D2691E | coral: #FF7F50 | cornflowerblue: #6495ED |\n    cornsilk: #FFF8DC | crimson: #DC143C | cyan: #00FFFF | darkblue: #00008B | darkcyan: #008B8B | darkgoldenrod: #B8860B |\n    darkgray: #A9A9A9 | darkgreen: #006400 | darkgrey: #A9A9A9 | darkkhaki: #BDB76B | darkmagenta: #8B008B | darkolivegreen: #556B2F |\n    darkorange: #FF8C00 | darkorchid: #9932CC | darkred: #8B0000 | darksalmon: #E9967A | darkseagreen: #8FBC8F | darkslateblue: #483D8B |\n    darkslategray: #2F4F4F | darkslategrey: #2F4F4F | darkturquoise: #00CED1 | darkviolet: #9400D3 | deeppink: #FF1493 |\n    deepskyblue: #00BFFF | dimgray: #696969 | dimgrey: #696969 | dodgerblue: #1E90FF | firebrick: #B22222 | floralwhite: #FFFAF0 |\n    forestgreen: #228B22 | fuchsia: #FF00FF | gainsboro: #DCDCDC | ghostwhite: #F8F8FF | gold: #FFD700 | goldenrod: #DAA520 |\n    gray: #808080 | green: #008000 | greenyellow: #ADFF2F | grey: #808080 | honeydew: #F0FFF0 | hotpink: #FF69B4 | indianred: #CD5C5C |\n    indigo: #4B0082 | ivory: #FFFFF0 | khaki: #F0E68C | lavender: #E6E6FA | lavenderblush: #FFF0F5 | lawngreen: #7CFC00 |\n    lemonchiffon: #FFFACD | lightblue: #ADD8E6 | lightcoral: #F08080 | lightcyan: #E0FFFF | lightgoldenrodyellow: #FAFAD2 |\n    lightgray: #D3D3D3 | lightgreen: #90EE90 | lightgrey: #D3D3D3 | lightpink: #FFB6C1 | lightsalmon: #FFA07A | lightseagreen: #20B2AA |\n    lightskyblue: #87CEFA | lightslategray: #778899 | lightslategrey: #778899 | lightsteelblue: #B0C4DE | lightyellow: #FFFFE0 |\n    lime: #00FF00 | limegreen: #32CD32 | linen: #FAF0E6 | magenta: #FF00FF | maroon: #800000 | mediumaquamarine: #66CDAA |\n    mediumblue: #0000CD | mediumorchid: #BA55D3 | mediumpurple: #9370DB | mediumseagreen: #3CB371 | mediumslateblue: #7B68EE |\n    mediumspringgreen: #00FA9A | mediumturquoise: #48D1CC | mediumvioletred: #C71585 | midnightblue: #191970 | mintcream: #F5FFFA |\n    mistyrose: #FFE4E1 | moccasin: #FFE4B5 | navajowhite: #FFDEAD | navy: #000080 | oldlace: #FDF5E6 | olive: #808000 |\n    olivedrab: #6B8E23 | orange: #FFA500 | orangered: #FF4500 | orchid: #DA70D6 | palegoldenrod: #EEE8AA | palegreen: #98FB98 |\n    paleturquoise: #AFEEEE | palevioletred: #DB7093 | papayawhip: #FFEFD5 | peachpuff: #FFDAB9 | peru: #CD853F | pink: #FFC0CB |\n    plum: #DDA0DD | powderblue: #B0E0E6 | purple: #800080 | rebeccapurple: #663399 | red: #FF0000 | rosybrown: #BC8F8F | royalblue: #4169E1 |\n    saddlebrown: #8B4513 | salmon: #FA8072 | sandybrown: #F4A460 | seagreen: #2E8B57 | seashell: #FFF5EE | sienna: #A0522D |\n    silver: #C0C0C0 | skyblue: #87CEEB | slateblue: #6A5ACD | slategray: #708090 | slategrey: #708090 | snow: #FFFAFA |\n    springgreen: #00FF7F | steelblue: #4682B4 | tan: #D2B48C | teal: #008080 | thistle: #D8BFD8 | tomato: #FF6347 |\n    turquoise: #40E0D0 | violet: #EE82EE | wheat: #F5DEB3 | white: #FFFFFF | whitesmoke: #F5F5F5 | yellow: #FFFF00 |\n    yellowgreen: #9ACD32 | transparent | currentcolor;\nRGBCOLOR = rgb(INT{3}) | rgb(STRICT_PERCENTAGE{3});\nRGBACOLOR = rgba(NUM{4}) | rgba(STRICT_PERCENTAGE{3} NUM);\nHSLCOLOR = hsl(NUM PERCENTAGE{2});\nHSLACOLOR = hsl(NUM PERCENTAGE{2} NUM);\nCOLOR = SCOLOR | RGBCOLOR | RGBACOLOR | HSLCOLOR | HSLACOLOR;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nSIDE_OR_CORNER =  [left | right] || [top | bottom];\nCOLOR_STOP = SPACE(COLOR [PERCENTAGE | LENGTH]?);\nLINEAR_GRADIENT = linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |\n                  repeating-linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |;\nGRADIENT_EXTENT = closest-corner | closest-side | farthest-corner | farthest-side;\nGRADIENT_POSITION = at BG_POSITION_TERM{1,4};\nGRADIENT_SHAPE = SPACE(circle LENGTH? GRADIENT_POSITION?) | SPACE(ellipse PLENGTH{2}? GRADIENT_POSITION?)| SPACE([circle | ellipse] GRADIENT_EXTENT? GRADIENT_POSITION?);\nRADIAL_GRADIENT = radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+) |\n                  repeating-radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+);\nURI_OR_NONE = URI | none;\nIMAGE =  URI | LINEAR_GRADIENT | RADIAL_GRADIENT | none;\nazimuth = ANGLE | [[ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncue-after = URI_OR_NONE;\ncue-before = URI_OR_NONE;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker;\nelevation = ANGLE | below | level | above | higher | lower;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH | POS_NUM;\nfont-style = normal | italic | oblique;\nfont-variant = normal | small-caps;\nfont-weight = normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\nheight = PAPLENGTH | POS_NUM ;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH;\nmax-width = NPLENGTH;\nmin-height = auto | PLENGTH;\nmin-width = auto | PLENGTH;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nPAUSE = POS_TIME | ZERO | POS_PERCENTAGE;\npause-after = PAUSE;\npause-before = PAUSE;\npitch-range = NUM;\npitch = FREQUENCY | x-low | low | medium | high | x-high;\nplay-during = [URI [ mix || repeat ]?] | auto | none;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none;\nrichness = NUM;\nright = APLENGTH;\nspeak-header = once | always;\nspeak-numeral = digits | continuous;\nspeak-punctuation = code | none;\nspeech-rate = NUM | x-slow | slow | medium | fast | x-fast | faster | slower;\nstress = NUM;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-decoration = none | [ underline || overline || line-through || blink ];\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nvoice-family = FAMILY_LIST;\nvolume = NUM | PERCENTAGE | silent | x-soft | soft | medium | loud | x-loud;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line;\nwidows = POS_INT;\nwidth = PAPLENGTH | POS_NUM ;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,ms,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | POS_NUM;\ninline-size = PAPLENGTH | POS_NUM;\nmax-block-size = NPLENGTH;\nmax-inline-size = NPLENGTH;\nmin-block-size = auto | PLENGTH;\nmin-inline-size = auto | PLENGTH;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx,ms]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub,ms]transform = none | TRANSFORM_FUNCTION+;\n[epub,ms]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto;\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-variant-east-asian = normal | [[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ] || [ full-width | proportional-width ] || ruby];\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nfont-stretch = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a5 | a4 | a3 | b5 | b4 | jis-b5 | jis-b4 | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz,ms]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[ms,webkit]line-break = auto | loose | normal | strict;\noverflow-wrap = normal | break-word;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz,ms]text-align-last = auto | start | end | left | right | center | justify;\n[ms]text-justify = auto | none | inter-word | inter-character | inter-ideograph /* specified in UA stylesheet for IE */;\n[ms]word-break = normal | keep-all | break-all | break-word;\n[ms]word-wrap = normal | break-word;\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[ms,webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[ms,webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\n[ms]text-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[webkit]text-combine = none | horizontal;\n[epub,ms]text-combine-horizontal = none | all | [ digits POS_INT? ]; /* relaxed */\ntext-combine-upright = none | all | [ digits POS_INT? ]; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\n[ms]touch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-variant: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\npause = INSETS pause-before pause-after;\nfont = FONT font-style font-variant font-weight font-stretch /* font-size line-height font-family are special-cased */;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\n\n/* old names  */\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n// user-agent.xml\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n// user-agent-page.css\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n// user-agent-base.css\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|body {\n  margin: 8px;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu,\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\nhtml|ruby,\nhtml|rb,\nhtml|rt,\nhtml|rbc,\nhtml|rtc {\n  unicode-bidi: isolate;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n\n/*--------------- ncx and toc ----------------------*/\n\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc {\n  -adapt-behavior: toc-container;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 16777216;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 33554432;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 50331648;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 67108864;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 83886080;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 100663296;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\n/**\n * CSS Color value from hash text (without '#' character).\n */\nexport function colorFromHash(text: string): Css.Color {\n  let num = parseInt(text, 16);\n  if (isNaN(num)) {\n    throw new Error(\"E_CSS_COLOR\");\n  }\n  if (text.length == 6) {\n    return new Css.Color(num);\n  }\n  if (text.length == 3) {\n    num =\n      (num & 15) |\n      ((num & 15) << 4) |\n      ((num & 240) << 4) |\n      ((num & 240) << 8) |\n      ((num & 3840) << 8) |\n      ((num & 3840) << 12);\n    return new Css.Color(num);\n  }\n  throw new Error(\"E_CSS_COLOR\");\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as an\n   *     argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    this.slave.endRule();\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n  flavor: StylesheetFlavor;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.depth++;\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = CssTokenizer.TokenType.LAST + 1;\n\n(() => {\n  actionsBase[CssTokenizer.TokenType.IDENT] = Action.IDENT;\n  actionsBase[CssTokenizer.TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.AT] = Action.AT;\n  actionsBase[CssTokenizer.TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[CssTokenizer.TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n\n  actionsSelector[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[CssTokenizer.TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelector[CssTokenizer.TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.C_PAR] = Action.DONE;\n  actionsSelectorInFunc[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[CssTokenizer.TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[CssTokenizer.TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[CssTokenizer.TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[CssTokenizer.TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[CssTokenizer.TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[CssTokenizer.TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[CssTokenizer.TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[CssTokenizer.TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[CssTokenizer.TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[CssTokenizer.TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[CssTokenizer.TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[CssTokenizer.TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[CssTokenizer.TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[CssTokenizer.TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[CssTokenizer.TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[CssTokenizer.TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[CssTokenizer.TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[CssTokenizer.TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[CssTokenizer.TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[CssTokenizer.TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[CssTokenizer.TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[CssTokenizer.TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[CssTokenizer.TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[CssTokenizer.TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[CssTokenizer.TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[CssTokenizer.TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsError[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  priority[CssTokenizer.TokenType.C_PAR] = 0;\n  priority[CssTokenizer.TokenType.COMMA] = 0;\n  priority[CssTokenizer.TokenType.QMARK] = 1;\n  priority[CssTokenizer.TokenType.COLON] = 1;\n  priority[CssTokenizer.TokenType.AMP_AMP] = 2;\n  priority[CssTokenizer.TokenType.BAR_BAR] = 2;\n  priority[CssTokenizer.TokenType.LT] = 3;\n  priority[CssTokenizer.TokenType.GT] = 3;\n  priority[CssTokenizer.TokenType.LT_EQ] = 3;\n  priority[CssTokenizer.TokenType.GT_EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ_EQ] = 3;\n  priority[CssTokenizer.TokenType.BANG_EQ] = 3;\n  priority[CssTokenizer.TokenType.PLUS] = 4;\n  priority[CssTokenizer.TokenType.MINUS] = 4;\n  priority[CssTokenizer.TokenType.STAR] = 5;\n  priority[CssTokenizer.TokenType.SLASH] = 5;\n  priority[CssTokenizer.TokenType.PERCENT] = 5;\n  priority[CssTokenizer.TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index == valStack.length) {\n        break;\n      }\n      if (valStack[index++] != sep) {\n        throw new Error(\"Unexpected state\");\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let v;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n        this.actions = actionsErrorDecl;\n        return null;\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n      return null;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    return valStack[0] as Css.Val;\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    this.handler.error(mnemonics, token);\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == CssTokenizer.TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == CssTokenizer.TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.OrMedia(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = CssTokenizer.TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == CssTokenizer.TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = CssTokenizer.TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -CssTokenizer.TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -CssTokenizer.TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case CssTokenizer.TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.EQ:\n          case CssTokenizer.TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case CssTokenizer.TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case CssTokenizer.TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (op != CssTokenizer.TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case CssTokenizer.TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case CssTokenizer.TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case CssTokenizer.TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case CssTokenizer.TokenType.NUM:\n        case CssTokenizer.TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === CssTokenizer.TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === CssTokenizer.TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case CssTokenizer.TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case CssTokenizer.TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === CssTokenizer.TokenType.MINUS;\n          const hasSign =\n            token.type === CssTokenizer.TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === CssTokenizer.TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === CssTokenizer.TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === CssTokenizer.TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case CssTokenizer.TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery,\n    parsingFunctionParam,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n    parserLoop: for (; count > 0; --count) {\n      token = tokenizer.token();\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          token1 = tokenizer.nthToken(2);\n          if (\n            token1.precededBySpace ||\n            (token1.type != CssTokenizer.TokenType.IDENT &&\n              token1.type != CssTokenizer.TokenType.FUNC)\n          ) {\n            // cannot be a selector\n          } else {\n            // can be either a selector or a property assignment\n            tokenizer.mark();\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case CssTokenizer.TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case CssTokenizer.TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case CssTokenizer.TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"not\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(\"not\");\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  break parserLoop;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === CssTokenizer.TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != CssTokenizer.TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.EQ:\n            case CssTokenizer.TokenType.TILDE_EQ:\n            case CssTokenizer.TokenType.BAR_EQ:\n            case CssTokenizer.TokenType.HAT_EQ:\n            case CssTokenizer.TokenType.DOLLAR_EQ:\n            case CssTokenizer.TokenType.STAR_EQ:\n            case CssTokenizer.TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case CssTokenizer.TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                CssTokenizer.TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n            case CssTokenizer.TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != CssTokenizer.TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          try {\n            valStack.push(colorFromHash(token.text));\n          } catch (err) {\n            handler.error(\"E_CSS_COLOR\", token);\n            this.actions = actionsError;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          if (Exprs.isViewportRelativeLengthUnit(token.text)) {\n            // Treat numeric value with viewport unit as numeric in expr.\n            valStack.push(\n              new Css.Expr(\n                new Exprs.Numeric(handler.getScope(), token.num, token.text),\n              ),\n            );\n          } else {\n            valStack.push(new Css.Numeric(token.num, token.text));\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"calc\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == CssTokenizer.TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == CssTokenizer.TokenType.SEMICOL ||\n              token1.type == CssTokenizer.TokenType.EOF ||\n              token1.type == CssTokenizer.TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case CssTokenizer.TokenType.NUM:\n            case CssTokenizer.TokenType.NUMERIC:\n            case CssTokenizer.TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          } else {\n            this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n            continue;\n          }\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          if (parsingStyleAttr) {\n            return true;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == CssTokenizer.TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (\n            token.type != CssTokenizer.TokenType.INT ||\n            token.precededBySpace\n          ) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          if (token.text.toLowerCase() == \"and\") {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            if (this.propName) {\n              this.actions = actionsPropVal;\n            } else {\n              this.exprError(\"E_CSS_UNBALANCED_PAR\", token);\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR ||\n                token.type == CssTokenizer.TokenType.URL\n              ) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == CssTokenizer.TokenType.SEMICOL ||\n                  token.type == CssTokenizer.TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == CssTokenizer.TokenType.STR ||\n                      token.type == CssTokenizer.TokenType.URL) &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case CssTokenizer.TokenType.STR:\n                case CssTokenizer.TokenType.URL:\n                  if (\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  continue;\n                case CssTokenizer.TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == CssTokenizer.TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == CssTokenizer.TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == CssTokenizer.TokenType.COLON &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == CssTokenizer.TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (\n            this.errorBrackets.length == 0 &&\n            token.type == CssTokenizer.TokenType.C_BRC\n          ) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          if (parsingFunctionParam) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n          }\n          return true;\n        default:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            return false;\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    throw new Error(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n\n/**\n * @return val\n */\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName: string,\n): Css.Val {\n  if (val.isExpr()) {\n    return evaluateExprToCSS(context, (val as Css.Expr).expr, propName);\n  }\n  return val;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export interface ElementStyle {}\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(element: Element, styles: { [key: string]: Css.Val });\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    createJustificationAdjustmentElement(\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n      vertical: boolean,\n    ): HTMLElement;\n    addAndAdjustJustificationElement(\n      nodeContext: Vtree.NodeContext,\n      insertAfter: boolean,\n      node: Node,\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n    ): HTMLElement;\n    compensateJustificationLineHeight(\n      span: Element,\n      br: Element,\n      nodeContext: Vtree.NodeContext,\n    ): void;\n    /**\n     * Fix justification of the last line of text broken across pages (if\n     * needed).\n     */\n    fixJustificationIfNeeded(\n      nodeContext: Vtree.NodeContext,\n      endOfColumn: boolean,\n    ): void;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(\n      checkPoints: Vtree.NodeContext[],\n    ): { edge: number; checkPoint: Vtree.NodeContext | null };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: object;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    /**\n     * Walk up NodeContext tree (starting from itself) and call the callback for\n     * each block.\n     */\n    walkUpBlocks(callback: (p1: NodeContext) => any): void;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\n/**\n * @returns string\n */\nexport function restoreOriginalText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\n/**\n * @returns string\n */\nexport function restoreNewText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Zoom page.\n   * @param scale Factor to which the page will be scaled.\n   */\n  zoom(scale: number) {\n    Base.setCSSProperty(this.container, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Returns the page area element.\n   */\n  getPageAreaElement(): HTMLElement {\n    return this.pageAreaElement || this.container;\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace: Whitespace): boolean {\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.IGNORE:\n      return !!text.match(/^\\s*$/);\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t\\f]*$/);\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n  }\n  throw new Error(`Unexpected whitespace: ${whitespace}`);\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    nps1.node === nps2.node &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Walk up NodeContext tree (starting from itself) and call the callback for\n   * each block.\n   */\n  walkUpBlocks(callback: (p1: NodeContext) => any) {\n    let nodeContext: NodeContext = this;\n    while (nodeContext) {\n      if (!nodeContext.inline) {\n        callback(nodeContext);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startSide: string = \"any\";\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startSide = this.startSide;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page ||\n      this.highestSeenOffset !== other.highestSeenOffset\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return \"any\";\n    }\n    return flowPos.startSide;\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical ? box.top : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical ? box.bottom : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setHorizontalPosition(start + extent * this.getBoxDir(), extent);\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setVerticalPosition(start, extent);\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  /** @override */\n  visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /** @override */\n  visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    val !== Css.ident.inherit\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssCascade } from \"./types\";\n\nexport interface ElementStyle extends CssCascade.ElementStyle {}\n\nexport const inheritedProps = {\n  azimuth: true,\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  elevation: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  \"pitch-range\": true,\n  quotes: true,\n  richness: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"speak-header\": true,\n  \"speak-numeral\": true,\n  \"speak-punctuation\": true,\n  \"speech-rate\": true,\n  \"shape-rendering\": true,\n  stress: true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"voice-family\": true,\n  volume: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"word-wrap\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"box-decoration-break\",\n  // TODO: box-decoration-block should not be inherited.\n  // https://github.com/vivliostyle/vivliostyle.js/issues/259\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName: string): Css.Val {\n    return CssParser.evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  /**\n   * @override\n   */\n  getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  /**\n   * @override\n   */\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  /**\n   * @override\n   */\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return !!this.condition.evaluate(context);\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((tv == null || av.priority > tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) == \"_\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) != \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name];\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\n/**\n * @return void\n */\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): any {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyleMap }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyleMap;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target as ElementStyleMap,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      const tv = getProp(target, prop);\n      setProp(target, prop, cascadeValues(context, tv, av));\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit == \"em\" ||\n      numeric.unit == \"ex\" ||\n      numeric.unit == \"rem\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    } else if (numeric.unit == \"%\") {\n      if (this.propName === \"line-height\") {\n        return numeric;\n      }\n      const unit = this.propName.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      return new Css.Numeric(numeric.num, unit);\n    }\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = CssParser.evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\nexport class NegateActionsSet extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstAction: CascadeAction;\n\n  constructor(list: ChainedAction[]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    this.firstAction = chainActions(list, this.checkAppliedAction);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.firstAction.apply(cascadeInstance);\n    if (!this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return (this.firstAction as ChainedAction).getPriority();\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem {\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem {\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem {\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem {\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: any): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent.trim().replace(/\\s+/g, \" \");\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val: Css.Val = pseudos?.[pseudoName]?.[\"content\"]?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n    }\n    Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return new Css.Str(\"\");\n  }\n}\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 1048576;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal = Css.ident.inline;\n    const display = props[\"display\"];\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"];\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet: CascadeValue = props[\"string-set\"];\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    if (pseudoprops[\"content\"]) {\n      pseudoprops[\"content\"] = pseudoprops[\"content\"].filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack = this\n      .followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts = (this.currentFollowingSiblingTypeCounts =\n      followingSiblingTypeCountsStack[\n        followingSiblingTypeCountsStack.length - 1\n      ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"];\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(visitor, elementStyle): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName)) {\n        elementStyle[propName] = elementStyle[propName].filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\",\n  /* content */\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver {\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    this.specificity += 1;\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by .${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by :${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fais\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default:\n        Logging.logger.warn(`unknown pseudo-class selector: ${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 256;\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          Logging.logger.warn(\n            `Double pseudoelement ::${this.pseudoelement}::${name}`,\n          );\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              Logging.logger.warn(\n                `Double pseudoelement ::${this.pseudoelement}::${name}`,\n              );\n              this.chain.push(new CheckConditionAction(\"\")); // always fails\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(`Unrecognized pseudoelement: ::${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 1;\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case CssTokenizer.TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case CssTokenizer.TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case CssTokenizer.TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case CssTokenizer.TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          Logging.logger.warn(\"Unsupported :: attr selector op:\", value);\n          action = new CheckConditionAction(\"\"); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(\"Unsupported attr selector:\", op);\n        action = new CheckConditionAction(\"\"); // always fails\n    }\n    this.chain.push(action);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      const specificity: number = this.specificity + this.cascade.nextOrder();\n      this.processChain(this.makeApplyRuleAction(specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    switch (funcName) {\n      case \"not\": {\n        const notParserHandler = new NotParameterParserHandler(this);\n        notParserHandler.startSelectorRule();\n        this.owner.pushHandler(notParserHandler);\n        break;\n      }\n      default:\n        // TODO\n        break;\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\nexport class NotParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    if (funcName == \"not\") {\n      this.reportAndSkip(\"E_CSS_UNEXPECTED_NOT\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_NEXT_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    if (this.chain && this.chain.length > 0) {\n      this.parentChain.push(new NegateActionsSet(this.chain));\n    }\n    this.parent.specificity += this.specificity;\n    this.owner.popHandler();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.owner.popHandler();\n  }\n}\n\n/**\n * @override\n */\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver {\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const av = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, av);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver {\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (writingMode && writingMode !== Css.ident.inherit) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (direction && direction !== Css.ident.inherit) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition = PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext {\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent = this.parent.getLastFollowingFloatInFragments(\n        float,\n      );\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical ? limits.top : limits.left;\n      case \"inline-end\":\n        return this.container.vertical ? limits.bottom : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = inlineEnd - inlineStart;\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize = inlineEnd - inlineStart;\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(inlineEnd - outerInlineSize, inlineSize);\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /**\n   * @override\n   */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  /**\n   * @override\n   */\n  isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  /**\n   * @override\n   */\n  getOrder(): number {\n    return Infinity;\n  }\n\n  /**\n   * @override\n   */\n  shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint {\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      floatReference,\n    );\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /**\n   * @override\n   */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartSideValue(breakValue: string | null): string {\n  switch (breakValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return breakValue;\n    default:\n      return \"any\";\n  }\n}\n\nexport function startSideValueToBreakValue(\n  startSideValue: string,\n): string | null {\n  switch (startSideValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return startSideValue;\n    default:\n      return null;\n  }\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Though method used to be used as a workaround for Chrome bug, it seems that\n * the bug has been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method as a workaround for Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function fixBoxesForNode(\n  clientLayout: Vtree.ClientLayout,\n  boxes: Vtree.ClientRect[],\n  node: Node,\n): Vtree.ClientRect[] {\n  const fullRange = node.ownerDocument.createRange();\n  fullRange.setStart(node, 0);\n  fullRange.setEnd(node, node.textContent.length);\n  const fullBoxes = clientLayout.getRangeClientRects(fullRange);\n  const result = [];\n  for (const box of boxes) {\n    let k: number;\n    for (k = 0; k < fullBoxes.length; k++) {\n      const fullBox = fullBoxes[k];\n      if (\n        box.top >= fullBox.top &&\n        box.bottom <= fullBox.bottom &&\n        Math.abs(box.left - fullBox.left) < 1\n      ) {\n        result.push({\n          top: box.top,\n          left: fullBox.left,\n          bottom: box.bottom,\n          right: fullBox.right,\n        });\n        break;\n      }\n    }\n    if (k == fullBoxes.length) {\n      Logging.logger.warn(\"Could not fix character box\");\n      result.push(box);\n    }\n  }\n  return result;\n}\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n  if (node.nodeType == 1) {\n    if (nodeContext.after || !nodeContext.inline) {\n      const cbox = clientLayout.getElementClientRect(node as Element);\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    if (vertical && Base.checkVerticalBBoxBug(document.body)) {\n      boxes = fixBoxesForNode(clientLayout, boxes, node);\n    }\n    let maxSize = 0;\n\n    // Get first of the widest boxes (works around Chrome results for soft\n    // hyphens).\n    for (const box of boxes) {\n      const boxSize = vertical ? box.bottom - box.top : box.right - box.left;\n      if (\n        box.right > box.left &&\n        box.bottom > box.top &&\n        (isNaN(edge) || boxSize > maxSize)\n      ) {\n        edge = vertical ? box.left : box.bottom;\n        maxSize = boxSize;\n      }\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  if (!nodeContext) {\n    return false;\n  }\n  const viewNode = nodeContext.viewNode;\n  if (viewNode && viewNode.nodeType === 1) {\n    return isSpecial(viewNode as Element);\n  } else {\n    return false;\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition {\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition {\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if ((float && float !== Css.ident.none) || isRoot) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    const parentNode = nodeContext.viewNode.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, nodeContext.viewNode);\n    if (removeSelf) {\n      parentNode.removeChild(nodeContext.viewNode);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.fixJustificationIfNeeded(nodeContext, true);\n      column.layoutContext.processFragmentedBlockEdge(\n        removeSelf ? nodeContext : nodeContext.parent,\n      );\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext {\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext = nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"LayoutIterator\",\n    );\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  /**\n   * @override\n   */\n  startNonElementNode(state: LayoutIteratorState): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint {\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset {\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition {\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  switch (display) {\n    case \"ruby\":\n    case \"inline-block\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"inline-list-item\":\n    case \"inline-table\":\n      return true;\n  }\n  return false;\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null = null;\n  blockDistanceToBlockEndFloats: number = NaN;\n  computedBlockSize: number;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical ? this.startEdge : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical ? this.endEdge : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical ? this.afterEdge : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical ? this.beforeEdge : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions = this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode = this.calculateOffsetInNodeForNodeContext(\n              position,\n            );\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        return this.layoutContext.peelOff(position, r ? r[0].length : 0);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (this.isFloatNodeContext(position) && !this.vertical) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = nodeContext.floatSide as string;\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.startEdge;\n      let x2 = this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(this.getStartEdge(parentBox), x1);\n        x2 = Math.min(this.getEndEdge(parentBox), x2);\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        parent.viewNode.appendChild(nodeContext.viewNode);\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe = containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n          \"div\",\n        );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft = area.paddingRight = area.paddingTop = area.paddingBottom = 0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext = this.pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments = context.getStashedFloatFragments(\n      floatReference,\n    );\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy = new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n          stashedFragment.continuations[0].float,\n        );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy = new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n      nodeContext,\n    );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  createJustificationAdjustmentElement(\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n    vertical: boolean,\n  ): HTMLElement {\n    const span = doc.createElement(\"span\") as HTMLElement;\n    span.style.visibility = \"hidden\";\n    span.style.verticalAlign = \"top\";\n    span.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    const inner = doc.createElement(\"span\") as HTMLElement;\n    inner.style.fontSize = \"0\";\n    inner.style.lineHeight = \"0\";\n    inner.textContent = \" #\";\n    span.appendChild(inner);\n\n    // Measure inline-start and inline-end edge positions of the line box,\n    // taking (exclusion) floats into consideration\n    span.style.display = \"block\";\n    span.style.textIndent = \"0\";\n    span.style.textAlign = \"left\";\n    parentNode.insertBefore(span, insertionPoint);\n    const leftPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"right\";\n    const rightPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"\";\n    if (Base.checkInlineBlockJustificationBug(document.body)) {\n      // For Chrome\n      span.style.display = \"inline\";\n    } else {\n      // For Firefox, Edge and IE\n      span.style.display = \"inline-block\";\n    }\n    const padding = vertical\n      ? rightPos.top - leftPos.top\n      : rightPos.left - leftPos.left;\n    const paddingStr = padding >= 1 ? `${padding - 1}px` : \"100%\";\n    if (vertical) {\n      span.style.paddingTop = paddingStr;\n    } else {\n      span.style.paddingLeft = paddingStr;\n    }\n    return span;\n  }\n\n  addAndAdjustJustificationElement(\n    nodeContext: Vtree.NodeContext,\n    insertAfter: boolean,\n    node: Node,\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n  ): HTMLElement {\n    fixJustificationOnHyphen(nodeContext, insertAfter, node, insertionPoint);\n    return this.createJustificationAdjustmentElement(\n      insertionPoint,\n      doc,\n      parentNode,\n      nodeContext.vertical,\n    );\n  }\n\n  compensateJustificationLineHeight(\n    span: Element,\n    br: Element,\n    nodeContext: Vtree.NodeContext,\n  ) {\n    const spanRect = this.clientLayout.getElementClientRect(span);\n    const brRect = this.clientLayout.getElementClientRect(br);\n    if (nodeContext.vertical) {\n      (br as HTMLElement).style.marginRight = `${\n        brRect.right - spanRect.right\n      }px`;\n      (br as HTMLElement).style.width = \"0px\";\n    } else {\n      (br as HTMLElement).style.marginTop = `${spanRect.top - brRect.top}px`;\n      (br as HTMLElement).style.height = \"0px\";\n    }\n    br.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n  }\n\n  /**\n   * Fix justification of the last line of text broken across pages (if\n   * needed).\n   */\n  fixJustificationIfNeeded(\n    nodeContext: Vtree.NodeContext,\n    endOfColumn: boolean,\n  ): void {\n    if (nodeContext.after && !nodeContext.inline) {\n      return;\n    }\n    if (endOfColumn) {\n      let textAlign = \"\";\n      for (\n        let parent = nodeContext.parent;\n        parent && !textAlign;\n        parent = parent.parent\n      ) {\n        if (!parent.inline && parent.viewNode) {\n          textAlign = (parent.viewNode as HTMLElement).style.textAlign;\n        }\n      }\n      if (textAlign !== \"justify\") {\n        return;\n      }\n    }\n    const node = nodeContext.viewNode;\n    const doc = node.ownerDocument;\n    const insertAfter =\n      endOfColumn && (nodeContext.after || node.nodeType != 1);\n    let insertionPoint = insertAfter ? node.nextSibling : node;\n    if (insertionPoint && !insertionPoint.parentNode) {\n      // Possible if removeSelf = false in finishBreak()\n      insertionPoint = null;\n    }\n    const parentNode =\n      node.parentNode || (nodeContext.parent && nodeContext.parent.viewNode);\n    if (!parentNode) {\n      // Possible if nothing was added to the column\n      return;\n    }\n    const span = this.addAndAdjustJustificationElement(\n      nodeContext,\n      insertAfter,\n      node,\n      insertionPoint,\n      doc,\n      parentNode,\n    );\n    if (!endOfColumn) {\n      const br = doc.createElement(\"div\") as HTMLElement;\n      parentNode.insertBefore(br, insertionPoint);\n      this.compensateJustificationLineHeight(span, br, nodeContext);\n    }\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"processLineStyling\",\n    );\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              this.fixJustificationIfNeeded(nodeContext, false);\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos - minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          this.postLayoutBlock(nodeContext, checkPoints);\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (viewNode.nodeType != 1) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elments\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        if (node.nodeType != 1) {\n          if (!haveStart) {\n            range.setStartBefore(node);\n            haveStart = true;\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(node as Element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          (node as Element).localName == \"ruby\" ||\n          isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(node as Element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    nodeContext.walkUpBlocks((block) => {\n      if (block.inheritedProps[\"box-decoration-break\"] === \"clone\") {\n        Asserts.assert(block.viewNode instanceof Element);\n        const paddingBorders = this.getComputedPaddingBorder(\n          block.viewNode as Element,\n        );\n        clonedPaddingBorder += block.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (block.display === \"table\") {\n          clonedPaddingBorder += block.blockBorderSpacing;\n        }\n      }\n    });\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing = this.findFirstOverflowingEdgeAndCheckPoint(\n      checkPoints,\n    );\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(\n    checkPoints: Vtree.NodeContext[],\n  ): { edge: number; checkPoint: Vtree.NodeContext | null } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch (flowPosition.sourceNode.namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (this.vertical) {\n        let wAdj = afterEdge + margin.right - clearEdge;\n        if (wAdj > 0 == margin.right >= 0) {\n          // In addition to collapsed portion\n          wAdj += margin.right;\n        }\n        spacer.style.marginLeft = `${wAdj}px`;\n      } else {\n        let hAdj = clearEdge - (afterEdge + margin.top);\n        if (hAdj > 0 == margin.top >= 0) {\n          // In addition to collapsed portion\n          hAdj += margin.top;\n        }\n        spacer.style.marginBottom = `${hAdj}px`;\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent && nodeContext.parent.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n            nodeContext.formattingContext,\n          );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (this.stopAtOverflow\n                    ? lastAfterNodeContext || nodeContext\n                    : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // new formatting context, or float or flex container\n                // (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (this.stopAtOverflow\n                    ? lastAfterNodeContext || nodeContext\n                    : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (!this.layoutConstraint.allowLayout(nodeContext)) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (this.stopAtOverflow\n                    ? lastAfterNodeContext || nodeContext\n                    : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n            formattingContext,\n          );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n        formattingContext,\n      );\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.top\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.bottom\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    const penalty = checkPoints[0].breakPenalty;\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext = this\n                  .nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats = this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder = this.column.calculateClonedPaddingBorder(\n      parentNodeContext,\n    );\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\nexport function fixJustificationOnHyphen(\n  nodeContext: Vtree.NodeContext,\n  insertAfter: boolean,\n  node: Node,\n  insertionPoint: Node,\n): void {\n  if (Base.checkSoftWrapOpportunityAfterHyphenBug(document.body)) {\n    const hyphenChar = resolveHyphenateCharacter(nodeContext);\n    const prevSibling = insertAfter ? node : node.previousSibling;\n    const prevText = prevSibling ? prevSibling.textContent : \"\";\n    if (prevText.charAt(prevText.length - 1) === hyphenChar) {\n      const doc = node.ownerDocument;\n      const parent = node.parentNode;\n      if (Base.checkSoftWrapOpportunityByWbrBug(document.body)) {\n        // For IE\n        parent.insertBefore(doc.createTextNode(\" \"), insertionPoint);\n      } else {\n        // For Edge\n        parent.insertBefore(doc.createElement(\"wbr\"), insertionPoint);\n      }\n    }\n  }\n}\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  /**\n   * @override\n   */\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  /**\n   * @override\n   */\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  /**\n   * @override\n   */\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements {\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  /**\n   * @return\n   */\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode = nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor {\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContextOrNull(\n      nodeContext,\n    );\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext = position.formattingContext as TableFormattingContext;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext {\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  /** @override */\n  saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  /** @override */\n  restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset {\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode = nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  /** @override */\n  startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer = cellViewNode.ownerDocument.createElement(\n      \"div\",\n    );\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions = this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy = rowNodeContext.viewNode.ownerDocument.createElement(\n                  \"td\",\n                );\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n                cellNodePosition.steps[0],\n                rowNodeContext,\n              );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition = this.formattingContext.cellBreakPositions[\n        cell.columnIndex\n      ];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (this.column\n          .layoutContext as Vgen.ViewFactory).xmldoc.getElementOffset(\n          tdNodeStep.node as Element,\n        );\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition = this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      return vertical ? rect[\"height\"] : rect[\"width\"];\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells = formattingContext.getRowSpanningCellsOverflowingTheRow(\n          rowIndex,\n        );\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext = cellFragment.findAcceptableBreakPosition()\n              .nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode = cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode = this.tableFormattingContext.getRootViewNode(\n      initialPosition,\n    );\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint {\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /**\n   * @override\n   */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /**\n   * @override\n   */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /**\n   * @override\n   */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint {\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints = this.collectCellFragmentLayoutConstraints(\n      positionAfter,\n      formattingContext,\n    );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints: entry.fragment.pseudoColumn.getColumn()\n          .fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (this.nodes[0]\n        .validator as PrimitiveValidator).combine(\n        group.nodes[0].validator as PrimitiveValidator,\n      );\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 1;\n\nexport const ALLOW_STR = 2;\n\nexport const ALLOW_IDENT = 4;\n\nexport const ALLOW_POS_NUMERIC = 8;\n\nexport const ALLOW_POS_NUM = 16;\n\nexport const ALLOW_POS_INT = 32;\n\nexport const ALLOW_COLOR = 64;\n\nexport const ALLOW_URL = 128;\n\nexport const ALLOW_NEGATIVE = 256;\n\nexport const ALLOW_ZERO = 512;\n\nexport const ALLOW_ZERO_PERCENT = 1024;\n\nexport const ALLOW_SLASH = 2048;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      return color;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] || this.validatorSet.defaultValues[name],\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateInherit(important: boolean, receiver: PropertyReceiver): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, Css.ident.inherit, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    this.error = true;\n    return null;\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val = values[name] || this.validatorSet.defaultValues[name];\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\"font-family\", \"line-height\", \"font-size\");\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == CssTokenizer.TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == CssTokenizer.TokenType.HASH) {\n      cssval = CssParser.colorFromHash(token.text);\n    } else if (token.type == CssTokenizer.TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"HASHCOLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == CssTokenizer.TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == CssTokenizer.TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != CssTokenizer.TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == CssTokenizer.TokenType.COMMA);\n      if (token.type != CssTokenizer.TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != CssTokenizer.TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != CssTokenizer.TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != CssTokenizer.TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case CssTokenizer.TokenType.INT: {\n            const idents = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.BAR:\n            setop(\"|\");\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case CssTokenizer.TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != CssTokenizer.TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == CssTokenizer.TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != CssTokenizer.TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != CssTokenizer.TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == CssTokenizer.TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case CssTokenizer.TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case CssTokenizer.TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case CssTokenizer.TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (\n        token.type == CssTokenizer.TokenType.IDENT &&\n        shorthandValidators[token.text]\n      ) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              propList.push(token.text);\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        const pval = this.defaultValues[pname];\n        if (!pval) {\n          Logging.logger.warn(\"Unknown property in makePropSet:\", pname);\n        } else {\n          map[pname] = pval;\n        }\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      receiver.unknownProperty(origName, value);\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        value === Css.ident.inherit || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (value === Css.ident.inherit) {\n        shorthand.propagateInherit(important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  /**\n   * @return void\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name];\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if ((this.atBlockStart || this.atFlowStart) && box.hasBox()) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      Asserts.assert(whitespace !== null);\n      if (!Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name];\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    [\"writing-mode\", \"direction\"].forEach((propName) => {\n      if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n        // Copy it over, but keep it at the root element as well.\n        this.rootStyle[propName] = elemStyle[propName];\n      }\n    });\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? elemStyle[\"background-color\"].evaluate(this.context)\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? elemStyle[\"background-image\"].evaluate(this.context)\n        : (null as Css.Val);\n      if (\n        (backgroundColor && backgroundColor !== Css.ident.inherit) ||\n        (backgroundImage && backgroundImage !== Css.ident.inherit)\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      const fontSize = elemStyle[\"font-size\"];\n      if (fontSize) {\n        const val = fontSize.evaluate(this.context);\n        let px = val.num;\n        switch (val.unit) {\n          case \"em\":\n          case \"rem\":\n            px *= this.context.initialFontSize;\n            break;\n          case \"ex\":\n            px *=\n              (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n              Exprs.defaultUnitSizes[\"em\"];\n            break;\n          case \"%\":\n            px *= this.context.initialFontSize / 100;\n            break;\n          default: {\n            const unitSize = Exprs.defaultUnitSizes[val.unit];\n            if (unitSize) {\n              px *= unitSize;\n            }\n          }\n        }\n        this.context.rootFontSize = px;\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"];\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"];\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"];\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore = box.afterBox.getBreakValue(\n                \"before\",\n              );\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-variant\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const probe = this.body.ownerDocument.createElement(\"span\");\n    probe.textContent = \"M\";\n    const killTime = new Date().valueOf() + 1000;\n    const style = this.head.ownerDocument.createElement(\"style\");\n    const bogusData = bogusFontData + bogusFontCounter++;\n    style.textContent = viewFontFace.makeAtRule(\"\", Net.makeBlob([bogusData]));\n    this.head.appendChild(style);\n    const probeCont = this.body.ownerDocument.createElement(\"span\");\n    probeCont.style.width = \"0\";\n    probeCont.style.height = \"0\";\n    probeCont.style.overflow = \"hidden\";\n    probeCont.appendChild(probe);\n    this.body.appendChild(probeCont);\n    probe.style.visibility = \"hidden\";\n    probe.style.fontFamily = fontFamily;\n    for (const pname in traitProps) {\n      Base.setCSSProperty(probe, pname, props[pname].toString());\n    }\n    const rect = probe.getBoundingClientRect();\n    const initWidth = rect.right - rect.left;\n    const initHeight = rect.bottom - rect.top;\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    Logging.logger.info(\"Starting to load font:\", src);\n    let loaded = false;\n    frame\n      .loop(() => {\n        const rect = probe.getBoundingClientRect();\n        const currWidth = rect.right - rect.left;\n        const currHeight = rect.bottom - rect.top;\n        if (initWidth != currWidth || initHeight != currHeight) {\n          loaded = true;\n          return Task.newResult(false);\n        }\n        const currTime = new Date().valueOf();\n        if (currTime > killTime) {\n          return Task.newResult(false);\n        }\n        return frame.sleep(10);\n      })\n      .then(() => {\n        if (loaded) {\n          Logging.logger.info(\"Loaded font:\", src);\n        } else {\n          Logging.logger.warn(\"Failed to load font:\", src);\n        }\n        this.body.removeChild(probeCont);\n        frame.finish(viewFontFace);\n      });\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    let fetcher = this.srcURLMap[src];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.warn(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[src] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>\n> extends PageBox<I> {\n  pageMaster: PageMaster;\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  pageMaster: PageMaster;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance\n> extends PageBox<I> {\n  pageMaster: PageMaster;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos =\n            ((containerSize + columnGap) * i) / columnCount -\n            columnGap / 2 +\n            container.paddingLeft -\n            ruleWidth / 2;\n          const size =\n            container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    if (style[\"content\"]) {\n      style[\"content\"] = style[\"content\"].filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"font-variant\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-shadow\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>\n> extends PageBoxInstance<P> {\n  pageMasterInstance: PageMasterInstance;\n\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  pageMasterInstance: PageMasterInstance;\n\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>\n> extends PageBoxInstance<P> {\n  pageMasterInstance: PageMasterInstance;\n\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    Base.setCSSProperty(container.element, \"overflow\", \"hidden\"); // default value\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  let writingMode = style[\"writing-mode\"];\n  writingMode = writingMode && writingMode.value;\n  let direction = style[\"direction\"];\n  direction = direction && direction.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marks = style[\"marks\"];\n  if (marks && marks.value !== Css.ident.none) {\n    pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n  }\n  const bleed = style[\"bleed\"];\n  if (!bleed || bleed.value === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks) {\n      let hasCrop = false;\n      if (marks.value.isSpaceList()) {\n        hasCrop = (marks.value as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks.value === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.value && bleed.value.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed.value as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    pageSizeAndBleed.bleed.num *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    pageSizeAndBleed.bleedOffset.num *\n    context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false);\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"black\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"];\n  if (marks) {\n    const value = marks.value;\n    if (value.isSpaceList()) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Css.toNumber(defaultPrinterMarkOffset, context);\n  const lineLength = Css.toNumber(defaultPrinterMarkLineLength, context);\n\n  if (bleed) {\n    const bgcolor = cascadedPageStyle[\"background-color\"];\n    if (bgcolor && bgcolor.value) {\n      page.bleedBox.style.backgroundColor = bgcolor.value.stringValue();\n    }\n  }\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (val && val.value !== Css.ident.inherit) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    this.hasAutoSize_ = !PageMaster.toExprAuto(\n      scope,\n      style[isHorizontal ? \"width\" : \"height\"],\n      new Exprs.Numeric(scope, 0, \"px\"),\n    );\n  }\n\n  /**\n   *  @override\n   */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /**\n   * @override\n   */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return false;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(\n      context: Exprs.Context,\n    ): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], \"\", style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop];\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"];\n    if (size) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      pageMasterStyle[\"width\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"width\"],\n        new CssCascade.CascadeValue(pageSize.width, priority),\n      );\n      pageMasterStyle[\"height\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"height\"],\n        new CssCascade.CascadeValue(pageSize.height, priority),\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver {\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, null, parent, null, validatorSet, false);\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        let result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(props, n, noPageSelectorProps[n]);\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          const prevCascVal = CssCascade.getProp(props, name);\n          result = prevCascVal\n            ? CssCascade.cascadeValues(null, result, prevCascVal)\n            : result;\n          CssCascade.setProp(props, name, result);\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  /**\n   * @override\n   */\n  makeApplyRuleAction(specificity: number): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap = {};\n\nexport const frontEdgeBlackListHor: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-top\": \"0px\",\n  \"padding-top\": \"0px\",\n  \"border-top-width\": \"0px\",\n  \"border-top-style\": \"none\",\n  \"border-top-color\": \"transparent\",\n  \"border-top-left-radius\": \"0px\",\n  \"border-top-right-radius\": \"0px\",\n};\n\nexport const frontEdgeBlackListVert: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-right\": \"0px\",\n  \"padding-right\": \"0px\",\n  \"border-right-width\": \"0px\",\n  \"border-right-style\": \"none\",\n  \"border-right-color\": \"transparent\",\n  \"border-top-right-radius\": \"0px\",\n  \"border-bottom-right-radius\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListHor: { [key: string]: string } = {\n  \"margin-top\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListVert: { [key: string]: string } = {\n  \"margin-right\": \"0px\",\n};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext {\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /**\n   * @override\n   */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"];\n          if (\n            !content ||\n            content === Css.ident.normal ||\n            content === Css.ident.none\n          ) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle = (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> = Task.newFrame(\n      \"createRefShadow\",\n    );\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> = Task.newFrame(\n      \"createShadows\",\n    );\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(\n    elementStyle: CssCascade.ElementStyle,\n  ): { lang: string | null; elementStyle: CssCascade.ElementStyle } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const value = CssCascade.getProp(style, name);\n        if (value.value !== Css.ident.inherit) {\n          props[name] = value.filterValue(inheritanceVisitor);\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps = CssCascade.getPolyfilledInheritedProps().filter(\n      (name) => computedStyle[name],\n    );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? (this.nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatReference =\n      elementStyle[\"float-reference\"] &&\n      PageFloats.floatReferenceOf(\n        elementStyle[\"float-reference\"].value.toString(),\n      );\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(element, computedStyle);\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"];\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"];\n      let floatSide = computedStyle[\"float\"];\n      let clearSide = computedStyle[\"clear\"];\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"],\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute = Display.establishesCBForAbsolute(\n        position,\n      );\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      if (\n        floating ||\n        (computedStyle[\"break-inside\"] &&\n          computedStyle[\"break-inside\"] !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      this.nodeContext.floatMinWrapBlock =\n        computedStyle[\"float-min-wrap-block\"] || null;\n      this.nodeContext.columnSpan = computedStyle[\"column-span\"];\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (breakAfter) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (breakBefore) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing;\n        let blockBorderSpacing;\n        if (borderSpacing) {\n          if (borderSpacing.isSpaceList()) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      this.nodeContext.footnotePolicy = computedStyle[\"footnote-policy\"];\n      const firstPseudo = computedStyle[\"x-first-pseudo\"];\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter !== Css.ident.auto) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"] || [\"word-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        overflowWrap === Css.ident.break_word;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak = this.processRepeatOnBreak(\n          computedStyle,\n        );\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (\n            elementStyle[\"content\"] &&\n            elementStyle[\"content\"].value &&\n            elementStyle[\"content\"].value.url\n          ) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                attributeValue = this.documentURLTransformer.transformFragment(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n                result.setAttribute(attributeName, attributeValue);\n                this.page.registerElementWithId(result, attributeValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.resolveURL(attributeValue);\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              result.setAttribute(attributeName, attributeValue);\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n        if (!this.nodeContext.inline) {\n          let blackList: { [key: string]: string } = null;\n          if (!firstTime) {\n            if (\n              this.nodeContext.inheritedProps[\"box-decoration-break\"] !==\n              \"clone\"\n            ) {\n              blackList = this.nodeContext.vertical\n                ? frontEdgeBlackListVert\n                : frontEdgeBlackListHor;\n            } else {\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              blackList = this.nodeContext.vertical\n                ? frontEdgeUnforcedBreakBlackListVert\n                : frontEdgeUnforcedBreakBlackListHor;\n            }\n          } else if (atUnforcedBreak && !this.isAtForcedBreak()) {\n            blackList = this.nodeContext.vertical\n              ? frontEdgeUnforcedBreakBlackListVert\n              : frontEdgeUnforcedBreakBlackListHor;\n          }\n          if (blackList) {\n            for (const propName in blackList) {\n              Base.setCSSProperty(result, propName, blackList[propName]);\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Check if the current position is at a forced break\n   * (Fix for Issue #690)\n   */\n  private isAtForcedBreak(): boolean {\n    for (\n      let nodeContext = this.nodeContext;\n      nodeContext && !nodeContext.after;\n      nodeContext = nodeContext.parent\n    ) {\n      if (Break.isForcedBreakValue(nodeContext.breakBefore)) {\n        return true;\n      }\n      if (\n        nodeContext.parent &&\n        (nodeContext.parent.sourceNode as Element).firstElementChild !==\n          nodeContext.sourceNode\n      ) {\n        break;\n      }\n    }\n    return false;\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  /**\n   * @return isSVGUrlAttribute\n   */\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext = new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n        parentFormattingContext,\n        this.nodeContext.sourceNode as Element,\n      );\n      (this.nodeContext\n        .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext).initializeRepetitiveElements(\n        this.nodeContext.vertical,\n      );\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (repeatOnBreak === Css.ident.auto) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : this.viewRoot;\n        if (parent) {\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      pos.sourceNode.namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /**\n   * @override\n   */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    for (const propName in computedStyle) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value.isNumeric() &&\n        Exprs.needUnitConversion((value as Css.Numeric).unit)\n      ) {\n        // font-size for the root element is already converted to px\n        value = Css.convertNumericToPx(value, this.context);\n      }\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (target.localName === \"rt\" && propName === \"font-size\") {\n        // Fix for Issue #673\n        if (this.fixRubyTextFontSize(target, value)) {\n          continue;\n        }\n      }\n      Base.setCSSProperty(target, propName, value.toString());\n    }\n  }\n\n  /**\n   * Fix ruby text font size.\n   * Issue #673: Minimum font size setting in Chrome causes ruby font size problem\n   * @param target the rt element\n   * @param value the font-size value\n   * @returns true if the font-size fix is done\n   */\n  fixRubyTextFontSize(target: Element, value: Css.Val): boolean {\n    if (!/Chrome/.test(navigator.userAgent)) {\n      // Do nothing if the browser engine is not \"Chrome\"\n      return false;\n    }\n    if (!value.isNumeric()) {\n      return false;\n    }\n    const numeric = value as Css.Numeric;\n    let fontSizeInPx: number;\n    if (numeric.unit === \"%\" || numeric.unit === \"em\") {\n      const parentElem = this.nodeContext?.parent?.viewNode as Element;\n      const parentFontSize =\n        parentElem && parseFloat(window.getComputedStyle(parentElem).fontSize);\n      fontSizeInPx =\n        (parentFontSize * numeric.num) / (numeric.unit === \"%\" ? 100 : 1);\n    } else {\n      fontSizeInPx = Css.convertNumericToPx(numeric, this.context).num;\n    }\n    if (!fontSizeInPx) {\n      return false;\n    }\n    const minFontSizeInPx = 10; // Default minimum font size setting in Chrome\n    if (fontSizeInPx >= minFontSizeInPx) {\n      return false;\n    }\n    if (!(target instanceof HTMLElement && \"zoom\" in target.style)) {\n      return false;\n    }\n    const zoom = fontSizeInPx / minFontSizeInPx;\n    Base.setCSSProperty(target, \"font-size\", `${minFontSizeInPx}px`);\n    Base.setCSSProperty(target, \"zoom\", `${zoom}`);\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /**\n   * @override\n   */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /**\n   * @override\n   */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /**\n   * @override\n   */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    if (nodeContext) {\n      nodeContext.walkUpBlocks((block) => {\n        const boxDecorationBreak = block.inheritedProps[\"box-decoration-break\"];\n        if (!boxDecorationBreak || boxDecorationBreak === \"slice\") {\n          const elem = block.viewNode as Element;\n          Asserts.assert(elem instanceof Element);\n          if (block.vertical) {\n            Base.setCSSProperty(elem, \"padding-left\", \"0\");\n            Base.setCSSProperty(elem, \"border-left\", \"none\");\n            Base.setCSSProperty(elem, \"border-top-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n          } else {\n            Base.setCSSProperty(elem, \"padding-bottom\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom\", \"none\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-right-radius\", \"0\");\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /**\n   * @override\n   */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"box-decoration-break\": true,\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /**\n   * @override\n   */\n  getRangeClientRects(range: Range): ClientRect[] {\n    const rects = range[\"getClientRects\"]();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.subtractOffsets(rect, layoutBoxRect),\n    );\n  }\n\n  /**\n   * @override\n   */\n  getElementClientRect(element: Element): ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.subtractOffsets(rect, layoutBoxRect);\n  }\n\n  /**\n   * @override\n   */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    const clientLayout = new DefaultClientLayout(this);\n    const computedStyle = clientLayout.getElementComputedStyle(this.root);\n    this.width =\n      opt_width || parseFloat(computedStyle[\"width\"]) || window.innerWidth;\n    this.height =\n      opt_height || parseFloat(computedStyle[\"height\"]) || window.innerHeight;\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n    Base.setCSSProperty(this.contentContainer, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> = new TaskUtil.Fetcher(\n  () => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  },\n  \"uaStylesheetBaseFetcher\",\n);\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"];\n      const height = viewportProps[\"height\"];\n      const textZoom = viewportProps[\"text-zoom\"];\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer {\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n  actualPageWidth: number;\n  actualPageHeight: number;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).thenFinish(frame);\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    Object.keys(pageProps).forEach((selector) => {\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageProps[selector] as any),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /**\n   * @override\n   */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /**\n   * @override\n   */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /**\n   * @override\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = Break.startSideValueToBreakValue(\n            flowPos.startSide,\n          );\n          flowPos.startSide = Break.breakValueToStartSideValue(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          cascadedPageStyle = {}; // clear margin boxes\n          // TODO: support the :blank page selector\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition = this.layoutPositionAtPageStart.flowPositions[\n        parentFlowName\n      ];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startSide);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats = pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Fix for issue #681\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats.\n    if (\n      deferredFloats.length &&\n      deferredFloats[0].float.floatReference === \"page\"\n    ) {\n      const deferredFloatNode =\n        deferredFloats[0].float.nodePosition.steps[0].node;\n      const deferredFloatOffset =\n        deferredFloatNode &&\n        this.xmldoc.getNodeOffset(deferredFloatNode, 0, false);\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      if (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      ) {\n        return Task.newResult(true);\n      }\n    }\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n        const strategy = new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated = pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats = pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startSide)) {\n      return Task.newResult(true);\n    }\n    flowPosition.startSide = \"any\";\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition = this.getLastAfterPositionIfDeferredFloatsExists(\n                    column,\n                    newPosition,\n                  );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    if (column.pageBreakType) {\n                      // forced break\n                      flowPosition.startSide = Break.breakValueToStartSideValue(\n                        column.pageBreakType,\n                      );\n                    }\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint = this.counterStore.createLayoutConstraint(\n      pageIndex,\n    );\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition = this.currentLayoutPosition.flowPositions[\n        flowNameStr\n      ];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> = Task.newFrame(\n      \"layoutFlowColumns\",\n    );\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer = this.viewport.document.createElement(\n          innerContainerTag,\n        );\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition = this.currentLayoutPosition.flowPositions[\n            flowNameStr\n          ];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n\n          // Though it seems that LShapeFloatBug still exists in Firefox, it\n          // apparently does not occur on exclusion floats. See the test file:\n          // test/files/column-break-bug.html\n          // if (Base.checkLShapeFloatBug(this.viewport.root)) {\n          // \t// Simplistic bug workaround: add a copy of the shape translated up.\n          //     exclusions.push(outerShape.withOffset(0, -1.25 * this.queryUnitSize(\"em\", false)));\n          // }\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n    cp.page++;\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle();\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        pageMaster.pageBox.specified[\"width\"].value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        pageMaster.pageBox.specified[\"height\"].value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> = Task.newFrame(\n      \"layoutNextPage\",\n    );\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n\n    // Shift 1px to workaround Chrome printing bug (Canceled because of another Chrome problem)\n    // page.bleedBox.style.paddingTop = `${evaluatedPageSizeAndBleed.bleed+1}px`;\n\n    // Shift 0.01px to workaround Firefox printing problem\n    // (This small value (< 1/64 px) has no effect to Chrome)\n    page.bleedBox.style.paddingTop = `${\n      evaluatedPageSizeAndBleed.bleed + 0.01\n    }px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {}\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\n// override, so we don't register an error\nexport function processViewportMeta(meta: Element): string {\n  let content = meta.getAttribute(\"content\");\n  if (!content) {\n    return \"\";\n  }\n  const vals = {};\n  let r: RegExpMatchArray;\n  while (\n    (r = content.match(\n      /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n    )) != null\n  ) {\n    content = content.substr(r[0].length);\n    vals[r[1]] = r[2];\n  }\n  const width = vals[\"width\"] - 0;\n  const height = vals[\"height\"] - 0;\n  if (width && height) {\n    return `@-epubx-viewport{width:${width}px;height:${height}px;}`;\n  }\n  return \"\";\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n  slave: BaseParserHandler;\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(\"CSS parser:\", mnemonics);\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const userAgentXML = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.load(userAgentXML).then(() => {\n        this.triggerSingleDocumentPreprocessing = true;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> = Task.newFrame(\n      \"OPSDocStore.load\",\n    );\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] = Plugin.getHooksForName(\n            Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT,\n          );\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        const userAgentURL = Base.resolveURL(\n          \"user-agent-page.css\",\n          Base.resourceBaseURL,\n        );\n        sources.push({\n          url: userAgentURL,\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (!isTocBox) {\n          const elemList = xmldoc.document.querySelectorAll(\n            \"style, link, meta\",\n          );\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const rel = elem.getAttribute(\"rel\");\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  rel == \"stylesheet\" ||\n                  (rel == \"alternate stylesheet\" && classes)\n                ) {\n                  let src = elem.getAttribute(\"href\");\n                  src = Base.resolveURL(src, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> = Task.newFrame(\n              \"fetchStylesheet\",\n            );\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              srcElem.parentElement.getAttribute(\n                \"data-vivliostyle-primary-entry\",\n              )\n            ) {\n              if (\n                !srcElem.querySelector(\n                  \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n                )\n              ) {\n                // When the TOC element is a part of the primaty entry (X)HTML,\n                // hide elements not containing TOC.\n                computedStyle[\"display\"] = Css.ident.none;\n              }\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        firstChild.textContent.trim() === \"\"\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = this.url + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n      if (\n        nonTocBoxDoc &&\n        nonTocBoxDoc.body &&\n        nonTocBoxDoc.body.getAttribute(\"data-vivliostyle-primary-entry\")\n      ) {\n        xmldoc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n      }\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(manifestUrl).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /**\n       * @override\n       */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /**\n       * @override\n       */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.items.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /**\n       * @override\n       */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURIComponent(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      (doc && doc.title) ||\n      manifestObj[\"name\"] ||\n      (manifestObj[\"metadata\"] && manifestObj[\"metadata\"][\"title\"]);\n    if (title) {\n      this.metadata[metaTerms.title] = [{ v: title }];\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\";\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder = manifestObj[\"readingOrder\"].includes(\n              itemObj,\n            );\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const param = {\n                url: Base.resolveURL(\n                  Base.convertSpecialURL(url),\n                  manifestUrl || this.pubURL,\n                ),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> = Task.newFrame(\n      \"renderSinglePage\",\n    );\n    let page = this.makePage(viewItem, pos);\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  private findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"renderPage\",\n    );\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"renderPagesUpto\",\n    );\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getCurrentSpread\");\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(\n        /** @type Vtree.Spread */\n        { left: null, right: null } as Vtree.Spread,\n      );\n    }\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"navigateToEPage\",\n    );\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"navigateToCFI\",\n    );\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"navigateTo\",\n    );\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      if (target) {\n        this.findPage(\n          {\n            spineIndex: item.spineIndex,\n            pageIndex: -1,\n            offsetInItem: viewItem.xmldoc.getElementOffset(target),\n          },\n          sync,\n        ).thenFinish(frame);\n      } else if (position.spineIndex !== item.spineIndex) {\n        // no fragment, different spine item\n        this.findPage(\n          {\n            spineIndex: item.spineIndex,\n            pageIndex: 0,\n            offsetInItem: -1,\n          },\n          sync,\n        ).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n      pageCont.setAttribute(\"aria-hidden\", \"true\");\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (page.offset === 0) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"span\");\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[\n        spineIndex\n      ] = [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties = item.itemRefElement.getAttribute(\n        \"properties\",\n      );\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    const document = window.document;\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = document.getElementById(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n      page.container.setAttribute(\"aria-hidden\", \"true\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n    page.container.setAttribute(\"aria-hidden\", \"false\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(this.window, this.fontSize, viewportElement);\n    }\n  }\n\n  private resolveSpreadView(viewport: Vgen.Viewport): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        // wide enough for a pair of pages of A/B paper sizes, but not too\n        // narrow\n        return viewport.width / viewport.height >= 1.45 && viewport.width > 800;\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const spreadView = this.resolveSpreadView(viewport);\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n    if (\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (\n      this.opfView &&\n      this.opfView.hasPages() &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    if (!this.pageSheetSizeAlreadySet && this.pageRuleStyleElement) {\n      let styleText = \"\";\n      Object.keys(pageSheetSize).forEach((selector) => {\n        styleText += `@page ${selector}{margin:0;size:`;\n        const size = pageSheetSize[selector];\n        styleText += `${size.width}px ${size.height}px;}`;\n      });\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage = page;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle: this.opf.spine[this.pagePosition.spineIndex]\n                          .title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] = this.opf.spine[\n                          this.pagePosition.spineIndex\n                        ].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          if (this.renderAllPages) {\n                            this.setReadyState(Constants.ReadyState.COMPLETE);\n                          }\n                          this.callback({ t: \"loaded\" });\n                          frame.finish(p);\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> = Task.newFrame(\n          \"moveTo.showCurrent\",\n        );\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer.showCurrent(viewer.currentPage).then(() => {\n                loopFrame.continueLoop();\n              });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> = Task.newFrame(\n              \"waitForCommand\",\n            );\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\nimport { VivliostyleViewportCss, VivliostyleViewportScreenCss } from \"./assets\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>${VivliostyleViewportCss}</style>\n          <style>${VivliostyleViewportScreenCss}</style>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer(\n        {\n          viewportElement: this.iframeWin.document.body\n            .firstElementChild as HTMLElement,\n          window: this.iframeWin,\n          debug: true,\n        },\n        {\n          defaultPaperSize: {\n            width: 794, // These numbers give weird output, but not setting them crashes the browser when there is no CSS.\n            height: 1122,\n          },\n        },\n      );\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n","import {\n    printHTML\n} from \"../src\"\n\n\ndocument.getElementById('print').addEventListener('click', () => {\n    const html = document.getElementById('html').value,\n        css = document.getElementById('css').value,\n        title = document.getElementById('title').value,\n        htmlDoc = `\n        <!doctype html>\n        <html>\n            <head>\n                <meta charset=\"UTF-8\">\n                <title>${title}</title>\n                <style>${css}</style>\n            <head>\n            <body>${html}</body>\n        </html>`,\n        printCallback = iframeWin => {\n            const pageCount = iframeWin.document.querySelectorAll('[data-vivliostyle-page-container]').length\n            console.log(`page count: ${pageCount}`)\n            iframeWin.print()\n        }\n\n    printHTML(htmlDoc, {\n        title,\n        printCallback,\n        hideIframe: true, // Whether to use a hidden iframe (default: true)\n        removeIframe: true // Whether to remove the iframe after use (default: true)\n    })\n})\n"],"names":["DIFF_DELETE","diff_main","text1","text2","cursor_pos","_fix_unicode","editdiff","oldText","newText","oldRange","index","length","newRange","oldLength","newLength","oldCursor","oldBefore","slice","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","Math","min","oldPrefix","newPrefix","make_edit_splice","cursor","suffixLength","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","i","indexOf","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","mid_common","diff_halfMatch_","diffs_a","diffs_b","concat","text1_length","text2_length","max_d","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","push","diff_cleanupMerge","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","pointerend","is_surrogate_pair_end","fix_unicode","pointer","count_delete","count_insert","text_delete","text_insert","splice","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","pop","changes","charCode","str","before","oldMiddle","newMiddle","after","tuples","ret","remove_empty_tuples","diff","INSERT","DELETE","EQUAL","PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","from","e","shift","error","messages","buildMessageAndStackTrace","stack","frameTrace","toString","HOOKS","logger","opt_console","this","consoleDebug","msg","debug","log","console","consoleInfo","info","consoleWarn","warn","consoleError","triggerListeners","level","listeners","forEach","listener","addListener","arguments","DEBUG","INFO","WARN","ERROR","hooks","registerHook","name","fn","hooksForName","Logging","removeHook","getHooksForName","plugin","Profiler","performanceInstance","registerTiming","noop","registerStartTiming","registerEndTiming","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","timestamps","st","Object","keys","stamps","l","t","start","end","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","firstLetterPattern","emptyObj","stringToJSON","JSON","parse","stripFragment","url","r","match","baseURL","location","href","setBaseURL","NS","resourceBaseURL","setResourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","lastIndexOf","urlOption","replace","convertSpecialURL","exec","asString","v","PriorityQueue","queue","add","item","parentIndex","parent","compare","peek","remove","result","curr","size","childIndex","knownPrefixes","propNameMap","checkIfPropertySupported","prefix","prop","probe","document","createElement","style","setProperty","documentElement","cssPropName","txt","toUpperCase","getPrefixedPropertyNames","prefixed","setCSSProperty","elem","prefixedPropertyNames","err","getCSSProperty","opt_value","propertyNames","getPropertyValue","getLangAttribute","element","lang","getAttributeNS","XML","namespaceURI","XHTML","getAttribute","StringBuffer","append","list","clear","join","escapeChar","escapeCSSIdent","escapeCSSStr","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeRegExp","binarySearch","high","good","h","m","numberCompare","b","indexArray","arr","key","map","multiIndexArray","SimpleEventTarget","dispatchEvent","evt","type","target","currentTarget","addEventListener","capture","removeEventListener","hasVerticalBBoxBug","hasInlineBlockJustificationBug","hasSoftWrapOpportunityAfterHyphenBug","hasSoftWrapOpportunityByWbrBug","getId","node","nodeType","idtxt","escape","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","RefStep","appendTo","sb","applyTo","pos","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","next","nextSibling","OffsetStep","offset","textBefore","textAfter","textLength","textContent","Fragment","fromString","fragstr","decodeURIComponent","steps","parseInt","Base","navigate","doc","ref","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","defaultPreferencesInstance","vivliostyle","print","Special","letterbox","viewW","viewH","objW","objH","scale","cssString","cssIdent","makeQualifiedName","objName","memberName","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","Const","one","_true","_false","builtIns","round","sqrt","max","typeof","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","values","Native","defineName","qualifiedName","val","defineFunc","funcs","defineBuiltIn","isViewportRelativeLengthUnit","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","dppx","dpi","dpcm","needUnitConversion","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","getScopeContext","scope","scopes","clearScope","queryUnitSize","isRoot","pvw","pvh","vw","pageAreaWidth","vh","pageAreaHeight","pageVertical","evalName","evalCall","params","noBuiltInEval","body","evaluate","apply","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","depend","isMediaName","Prefix","_this","getOp","evalPrefix","constructor","Infix","lhs","rhs","_this2","getPriority","evalInfix","thisPriority","Logical","Comparison","Additive","Multiplicative","Not","Negate","And","AndMedia","Or","OrMedia","Lt","Le","Gt","Ge","Eq","Ne","Add","Subtract","Multiply","Divide","Modulo","Numeric","num","_this3","Named","_this4","MediaName","_this5","_this6","Call","_this7","expandedParams","expanded","Cond","cond","ifTrue","ifFalse","_this8","_this9","MediaTest","_this10","Param","_this11","and","sub","mul","div","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitColor","color","visitURL","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","SpaceList","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Exprs","Empty","instance","Slash","Str","nameTable","Ident","getName","Num","Int","Color","rgb","URL","appendList","separator","Expr","toNumber","convertNumericToPx","absolute","all","always","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","crop","cross","column","exclusive","fixed","flex","footnote","footer","header","hidden","horizontal_tb","inherit","inline","inline_block","inline_end","inline_start","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","vertical_lr","vertical_rl","visible","hundredPercent","fullWidth","fullHeight","numericZero","processingOrder","font-size","processingOrderFn","name1","name2","Number","MAX_VALUE","Rect","Point","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","BandIntersection","lowOrHigh","intersectY","isNaN","addBandIntersections","intersections","w1","w2","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","normalize","bands","currBand","prevBand","findBand","mid","findUppermostFullyOpenRect","rect","band","topEdge","bottomEdge","findBottommostFullyOpenRect","SetVisitor","propSet","Css","IntVisitor","toInt","def","ShapeVisitor","collect","coords","getShape","width","height","numbers","coord","GeometryUtil","toShape","CountersVisitor","reset","counters","toCounters","UrlTransformVisitor","baseUrl","transformer","transformURL","cloneCounterValues","TokenType","TargetCounterReference","targetId","resolved","equals","spineIndex","pageIndex","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","setStyler","styler","getFragment","getTransformedId","transformedId","getPageCounterVal","format","currentPageCounters","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","pageCounters","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","elementCounters","getNamedStringVal","retrievePosition","stringValues","namedStringValues","offsets","sort","pageStartOffset","pageLastOffset","container","querySelectorAll","firstOffset","startOffset","lastOffset","firstExceptOffset","offsetPrev","offsetNext","elementAtOffset","querySelector","elementAtPageStartOffset","firstElementChild","first","last","first-except","setNamedString","cascadeInstance","currentElementOffset","CounterStore","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","previousPageCounters","incrementMap","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementCounterName","counterValues","pushPageCounters","currentPageCountersStack","popPageCounters","unresolvedRefs","unresolvedReferences","resolvedRefs","resolvedReferences","pushed","referencesToSolve","newReferencesOfCurrentPage","some","finishPage","ids","oldPageIndex","pageIndicesById","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","referencesToSolveStack","popReferencesToSolve","pagesCounterExprs","exprContentListener","bind","findIndex","setAttribute","PAGES_COUNTER_ATTR","finishLastPage","viewport","nodes","root","pages","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCharCode","escapeParse","Action","Token","EOF","makeActions","spec","NaN","END","INVALID","actionsNormal","SPACE","BANG","STR2","HASH","DOLLAR","PERCENT","AMP","STR1","O_PAR","C_PAR","STAR","PLUS","COMMA","MINUS","DOT","SLASH","INT","COLON","SEMICOL","LT","EQ","GT","QMARK","AT","IDENT","O_BRK","BSLASH","C_BRK","HAT","O_BRC","BAR","C_BRC","TILDE","actionsIdent","ENDIDNT","FUNC","CONT","IDNTESC","actionsNumOrClass","TOCLASS","TONUM","TOIDES","actionsMinus","MINMIN","TOINT","TOIDENT","actionsIdentEsc","ENDIDES","CHKPOSS","FUNCES","actionsInt","ENDINT","PCUNIT","NUMBER","UNIT","actionsNumber","ENDNUM","FrameState","actionsCheckEq","EQTAIL","actionsColon","COL_COL","actionsBar","BAR_BAR","actionsAmp","AMP_AMP","actionsSlash","COMMENT","actionsComment","COMMST","actionsCommentStar","ENDNOTK","actionsMinusMinus","KILL1","actionsLt","LT_BG","actionsLtBang","LT_BG_M","actionsLtBangMinus","KILL2","actionsIdentEscChr","IDESCH","actionsStr1","ENDSTR","STR1ESC","actionsStr2","STR2ESC","actionsStr1Esc","ENDESTR","CHKPOSN","actionsStr2Esc","actionsURL","URL2","URL1","actionsURLInside","ENDURL","CHKSP","URLESC","actionsURLInside1","TERMURL","actionsURLInside2","actionsURLTail","FINURL","Tokenizer","input","handler","indexMask","buffer","token","tail","fillBuffer","nthToken","consume","mark","head","unmark","hasMark","reallocate","newIndexMask","newBuffer","oldIndex","newIndex","position","mnemonics","actions","tokenType","tokenPosition","tokenText","tokenNum","seenSpace","backslashPos","STR","CLASS","BANG_EQ","NUM","parseFloat","NUMERIC","precededBySpace","privateCurrentTask","primaryScheduler","currentTask","newFrame","task","frame","Frame","state","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","TimerImpl","currentTime","valueOf","setTimeout","delay","clearTimeout","Scheduler","timer","setSlice","timeout","isTimeSliceOver","sliceOverTime","arm","inTimeSlice","newTime","scheduledTime","timeoutToken","wakeupTime","doTimeSlice","schedule","continuation","opt_delay","c","order","canceled","resumeInternal","run","opt_name","Task","then","done","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","interrupt","waitTarget","getScheduler","isRunning","whenDone","unwind","exception","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","get","ResultImpl","res1","res2","res","INIT","checkEnvironment","FINISHED","DEAD","timeSlice","sleep","loop","step","more","loopWithFrame","LoopBodyFrame","opt_waitTarget","continueLoop","breakLoop","Fetcher","fetch","resource","piggibacks","piggybacks","arrived","piggyback","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","localName","removeAttribute","SVG","setAttributeNS","XLINK","XMLHttpRequestResponseType","VivliostyleViewportScreenCss","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","responseType","onreadystatechange","readyState","DOCUMENT","HTMLDocument","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","builderCtr","WebKitBlobBuilder","MSBlobBuilder","builder","getBlob","Blob","StylesheetFlavor","ResourceStore","parser","load","opt_required","opt_message","resources","fetchInner","isTocBox","endsWith","userAgentXmlUrl","isUserAgentXml","TaskUtil","parseJSONResource","store","colorFromHash","ParserHandler","flavor","AUTHOR","getCurrentToken","getScope","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","getImportantSpecificity","USER_AGENT","USER","getBaseSpecificity","DispatchParserHandler","pushHandler","slave","popHandler","tokenizer","errorMsg","_ParserHandler","SkippingParserHandler","owner","topLevel","depth","SlaveParserHandler","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorInFunc","actionsSelectorCont","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsError","actionsErrorDecl","actionsErrorSelector","ExprContext","OP_MEDIA_AND","CssTokenizer","LAST","SELECTOR_START","RULE_END","DONE","PROP","SELECTOR_NAME","SELECTOR_ANY","SELECTOR_ID","SELECTOR_CLASS","SELECTOR_ATTR","SELECTOR_PSEUDOCLASS","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_FOLLOWING_SIBLING","SELECTOR_NAME_1","SELECTOR_ANY_1","SELECTOR_ID_1","SELECTOR_CLASS_1","SELECTOR_ATTR_1","SELECTOR_BODY","SELECTOR_PSEUDOCLASS_1","SELECTOR_PSEUDOELEM","SELECTOR_NEXT","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","VAL_BRC","VAL_BANG","VAL_PLUS","VAL_FINISH","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_O_PAR","EXPR_FUNC","EXPR_PREFIX","EXPR_PARAM","EXPR_INFIX_NAME","EXPR_INFIX","GT_EQ","LT_EQ","EQ_EQ","EXPR_C_PAR","EXPR_O_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_SEMICOL","ERROR_POP_DECL","Parser","exprContext","MEDIA","extractVals","sep","valStack","valStackReduce","count","exprError","propName","exprStackReduce","val2","tok","e1","e2","er","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","makeCondition","condition","split","isInsidePropertyOnlyRule","ruleStack","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","token1","parserLoop","propImportant","namespacePrefixToURI","defaultNamespaceURI","pseudoclassType","POSITIVE_INFINITY","TILDE_EQ","BAR_EQ","HAT_EQ","DOLLAR_EQ","STAR_EQ","regionRule","pageRule","IMPORT","WHEN","importCondition","importReady","importURL","ruleName","rulePseudoName","errorBrackets","ErrorHandler","parseStylesheetFromText","media","resolvedURL","innerFrame","parseStylesheetFromURL","Net","xhr","parseValue","numProp","z-index","column-count","flow-linger","opacity","flow-priority","utilization","evaluateCSSToCSS","matchANPlusB","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","LayoutProcessor","PageFloats","Selectors","RepetitiveElement","Table","Vtree","MatcherBuilder","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","restoreNewText","reduce","fastdiff","resolveIndex","coef","current","change","object","formattingContextType","FloatReference","flagmentLayoutConstraintType","isInstanceOfTableFormattingContext","isInstanceOfTableRowLayoutConstraint","Whitespace","ShadowType","delayedProps","transform","transform-origin","delayedPropsIfRelativePositioned","DelayedItem","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","makeListener","action","actionFn","Page","bleedBox","hrefHandler","anchorElement","preventDefault","setAutoPageWidth","isAuto","isAutoPageWidth","AUTO_PAGE_WIDTH_ATTRIBUTE","setAutoPageHeight","isAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","delayedItems","getElementClientRect","dimensions","trigger","observers","observer","event","zoom","getPageAreaElement","pageAreaElement","whitespaceFromPropertyValue","whitespace","IGNORE","NEWLINE","PRESERVE","canIgnore","Flow","parentFlowName","FlowChunk","linger","repeated","breakBefore","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","shadowType","isSameShadowContext","shadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","NONE","formattingContext","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","breakPenalty","floatReference","INLINE","hyphenateCharacter","breakWord","inheritedProps","vertical","direction","firstPseudo","resetView","clearSpacer","display","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","flexContainer","breakAfter","establishesBFC","containingBlockForAbsolute","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","cloneItem","np","captionSide","inlineBorderSpacing","blockBorderSpacing","overflow","create","modify","shared","clone","npp","npc","toNodePositionStep","toNodePosition","nc","ROOTLESS","_nc$shadowContext","_nc$shadowContext$sty","_nc$shadowContext$sty2","_pseudos","isInsideBFC","getContainingBlockForAbsolute","walkUpBlocks","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","newfp","positions","newarr","startSide","hasContent","LayoutPosition","newcp","highestSeenNode","highestSeenOffset","lookupPositionOffset","flows","flowPositions","thisFlowNames","otherFlowNames","flowPos","startSideOfFlow","firstFlowChunkOfFlow","flowChunkPosition","Container","getInsetTop","marginTop","borderTop","paddingTop","getInsetBottom","marginBottom","borderBottom","paddingBottom","getInsetLeft","marginLeft","borderLeft","paddingLeft","getInsetRight","marginRight","borderRight","paddingRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","originX","originY","innerShape","exclusions","computedBlockSize","snapWidth","snapHeight","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerX","outerY","outerWidth","outerHeight","ContentPropertyHandler","rootContentValue","visitStrInner","ownerDocument","createTextNode","appendChild","img","createElementNS","CssParser","nonTrivialContent","azimuth","border-collapse","border-spacing","caption-side","clip-rule","color-interpolation","color-rendering","elevation","empty-cells","fill","fill-opacity","fill-rule","font-kerning","font-size-adjust","font-family","font-feature-settings","font-style","font-stretch","font-variant","font-weight","glyph-orientation-vertical","hyphens","hyphenate-character","hyphenate-limit-chars","hyphenate-limit-last","image-rendering","image-resolution","letter-spacing","line-break","line-height","list-style-image","list-style-position","list-style-type","marker","marker-end","marker-mid","marker-start","orphans","overflow-wrap","paint-order","pointer-events","pitch-range","quotes","richness","ruby-align","ruby-position","speak-header","speak-numeral","speak-punctuation","speech-rate","shape-rendering","stress","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tab-size","text-align","text-align-last","text-anchor","text-decoration-skip","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-combine-upright","text-indent","text-justify","text-rendering","text-size-adjust","text-transform","text-underline-position","voice-family","volume","white-space","widows","word-break","word-spacing","word-wrap","writing-mode","polyfilledInheritedProps","supportedNamespaces","http://www.idpf.org/2007/ops","http://www.w3.org/1999/xhtml","http://www.w3.org/2000/svg","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","max-width","max-height","min-width","min-height","buildCouplingMap","sideMap","extentMap","pattern","side","extentPattern","couplingMapVert","block-start","block-end","inline-start","inline-end","block-size","inline-size","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","ConditionalCascadeValue","cascadeValues","tv","av","SPECIALS","region-id","fragment-selector-id","isPropName","isInherited","getProp","setProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","_viewConditionalStyles","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","styles","as","ts","prototype","chainActions","chain","chained","InheritanceVisitor","props","setPropName","getFontSize","cascval","parentFontSize","convertFontRelativeLengthToPx","baseFontSize","CascadeAction","mergeWith","CompoundAction","ConditionItemAction","conditionItem","pushConditionItem","fresh","ApplyRuleAction","viewConditionId","currentStyle","ChainedAction","makePrimary","cascade","CheckClassAction","className","currentClassNames","includes","insertInTable","CheckIdAction","currentId","currentXmlId","CheckLocalNameAction","currentLocalName","tags","CheckNSTagAction","currentNamespace","nsPrefix","nsCount","nstags","CheckTargetEpubTypeAction","epubTypePatt","currentElement","getElementById","epubType","epub","CheckNamespaceAction","_this12","CheckAttributePresentAction","_this13","hasAttributeNS","CheckAttributeEqAction","_this14","epubtypes","CheckNamespaceSupportedAction","_this15","CheckAttributeRegExpAction","regexp","_this16","attr","CheckLangAction","langRegExp","_this17","IsFirstAction","isFirst","IsRootAction","IsNthAction","_this18","Matchers","IsNthSiblingAction","currentSiblingOrder","IsNthSiblingOfTypeAction","currentSiblingTypeCounts","IsNthLastSiblingAction","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","IsEmptyAction","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","disabled","IsDisabledAction","IsCheckedAction","selected","checked","CheckConditionAction","_this19","conditions","dependentConditions","CheckAppliedAction","_this20","applied","cloned","NegateActionsSet","_this21","checkAppliedAction","firstAction","AbstractConditionItem","decrement","DescendantConditionItem","ChildConditionItem","AdjacentSiblingConditionItem","_this22","fired","FollowingSiblingConditionItem","_this23","AfterPseudoelementItem","afterprop","processPseudoelementProps","RestoreLangItem","QuotesScopeItem","oldQuotes","AttrValueFilterVisitor","_this24","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","counterResolver","_this25","maxDepth","quoteDepth","upper","lower","additiveNumbering","entries","alphabeticNumbering","alphabetStr","alphabet","digit","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseTradInformal","visitFuncCounter","numval","_this26","visitFuncCounters","numvals","_this27","visitFuncTargetCounter","targetUrlStr","targetUrl","_this28","visitFuncTargetCounters","_this29","visitFuncString","visitFuncContent","pseudos","_pseudos$pseudoName","content","_pseudos$pseudoName$c","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","ParseState","Cascade","pagetypes","createInstance","counterListener","CascadeInstance","nextOrder","siblingTypeCountsStack","followingSiblingOrderStack","viewConditions","filter","dependentConditionMatchers","conditionId","_this30","applyAction","pushRule","pageType","baseStyle","currentNSTag","currentEpubTypes","EMPTY","currentPageType","applyActions","defineCounter","scoping","counterScoping","pushCounters","displayVal","setMap","set","setVal","_this$currentElement","_this$currentElement2","setCounterName","listItemCounts","popCounters","setNamedStrings","stringSet","pseudoprops","pushElement","types","siblingOrderStack","currentNamespaceTypeCounts","followingSiblingTypeCountsStack","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_this31","pseudoNames","pseudoProps","applyAttrFilterInner","elementStyle","pseudoMap","popRule","popElement","uaBaseCascade","CascadeParserHandler","validatorSet","_this32","TOP","insertNonPrimary","processChain","isInsideSelectorRule","patt","RegExp","footnoteContent","ActionClass","nthSelectorActionClasses","conditionCount","finishChain","SELECTOR","_CssParser$SlaveParse","insideSelectorRule","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","Plugin","hook","converted","notParserHandler","NotParameterParserHandler","nth-child","nth-of-type","nth-last-child","nth-last-of-type","_this33","parentChain","_CascadeParserHandler","DefineParserHandler","dim","PropSetParserHandler","_this34","PropertyParserHandler","_this35","forEachViewConditionalStyles","viewConditionalStyles","mergeViewConditionalStyles","cascMap","mergeStyle","isVertical","cascaded","writingModeCasc","writingMode","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","forEachStylesInRegion","regionStyle","regions","footnoteRegion","to","newVal","convertToPhysical","dest","couplingMap","hasOwnProperty","cascVal","coupledName","targetName","coupledCascVal","createRegExpMap","valueMaps","toPhysical","physical","logical","convert","maps","maps2","replaced","Size","horizontal-tb","vertical-rl","vertical-lr","toPhysicalMaps","toLogicalMaps","getSize","sizes","original","maxWidth","minWidth","maxHeight","minHeight","getComputedValue","getElementComputedStyle","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","COLUMN","REGION","PAGE","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","float","VtreeImpl","findPageFloatByNodePosition","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","PageFloatLayoutContext","generatingNodePosition","floatStore","getPreviousSibling","floatsDeferredFromPrevious","floatsDeferredToNext","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","forbiddenFloats","PageFloatLayoutStrategyResolver","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","floatFragments","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","floatAnchors","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","locked","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","hasSameContainerAs","invalidated","layoutConstraints","detachChildren","attachChildren","isInvalidated","validate","toLogical","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","stashedFloatFragments","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","logicalSide","physicalSide","limit","getLimitValueInner","parentLimit","limits","getLimitValuesInner","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","blockSize","inlineSize","outerBlockSize","outerInlineSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalSides","logicalClearSide","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","Footnote","FootnoteFragment","LineFootnotePolicyLayoutConstraint","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","forcedBreakValues","recto","verso","region","isForcedBreakValue","spreadBreakValues","isSpreadBreakValue","avoidBreakValues","avoid-page","avoid-column","avoid-region","isAvoidBreakValue","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","breakValueToStartSideValue","breakValue","startSideValueToBreakValue","startSideValue","calculateEdge","extraOffset","cbox","range","createRange","setStart","setEnd","boxes","getRangeClientRects","getBoundingClientRect","fullRange","fullBoxes","fullBox","abs","maxSize","boxSize","getElementHeight","getComputedMargin","isOrphan","removeFollowingSiblings","isSpecial","isSpecialNodeContext","AbstractBreakPosition","calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","isEdgeUpdated","preferDropping","isFirstContentOfRepetitiveElementsOwner","Break","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","isOverflown","isInstanceOfRepetitiveElementsOwnerFormattingContext","repetitiveElements","getRepetitiveElements","isFirstContentNode","blockify","blockifiedStr","displayStr","isAbsolutelyPositioned","getComputedDislayValue","isBlock","isInlineLevel","LayoutProcessorResolver","find","RESOLVE_LAYOUT_PROCESSOR","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","finishBreak","forceRemoveSelf","endOfColumn","fixJustificationIfNeeded","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","isInstanceOfBlockFormattingContext","RESOLVE_FORMATTING_CONTEXT","Display","AbstractLayoutRetryer","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accepted","accept","postLayout","initialPosition","clearNodes","sibling","initialBreakPositions","breakPositions","initialFragmentLayoutConstraints","fragmentLayoutConstraints","initialStateOfFormattingContext","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","DOMParser","parseFromString","SHADOW","getPseudoName","setPseudoName","PseudoelementStyler","getStyle","deep","CssCascade","nest","processContent","contentProcessed","contentVal","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","ROOTED","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","processAfterIfContinues","mediaTags","svg","audio","video","AllLayoutConstraint","constraints","BoxBreakPosition","checkPoints","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","isSpecialInlineDisplay","Column","viewDocument","getTopEdge","startEdge","beforeEdge","getBottomEdge","endEdge","afterEdge","getLeftEdge","getRightEdge","isFloat","stopByOverflow","footnoteEdge","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","flowRootFormattingContext","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","postLayoutBlock","position1","createFloat","killFloats","cssFloat","createFloats","parseComputedLength","insets","getComputedPaddingBorder","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getComputedInsets","boxSizing","nodeContextIn","layoutFloat","nodeContextAfter","floatBBox","floatBox","parentBox","floatBoxMeasure","floatHorBox","dir","bottommostFloatTop","boxExtent","floatWidth","floatHeight","floatBottom","floatBoxEdge","floatBoxTop","floatBands","lastY","floatBand","leftFloatEdge","rightFloatEdge","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","forceNonfitting","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","cancelLayout","layoutStashedPageFloats","success","excluded","newFloatAreas","newFragments","stashedFragment","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","nodeContextOverflowingDueToRepetitiveElements","createJustificationAdjustmentElement","insertionPoint","span","inner","textIndent","textAlign","leftPos","rightPos","inlineBlock","padding","paddingStr","addAndAdjustJustificationElement","insertAfter","hyphenChar","resolveHyphenateCharacter","prevSibling","prevText","compensateJustificationLineHeight","br","spanRect","brRect","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","overflown","saveBoxBreakPosition","POST_LAYOUT_BLOCK","findEndOfLine","linePosition","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","textNode","resolveTextNodeBreaker","breakTextNode","RESOLVE_TEXT_NODE_BREAKER","TextNodeBreaker","getRangeBoxes","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","paddingBorders","getOffsetByRepetitiveElements","bp","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","cp","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","fc","layoutProcessor","nodeContextParam","lastAfterPosition","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segment","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","y2min","yn","bandIntersections","bi1","bi2","rw","chunkPositions","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","pseudoParent","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","blockDistanceToBlockEndFloats","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfAfterIfContinuesLayoutConstraint","getElementsOffsetsForTableCell","parentClonedPaddingBorder","startNodeContexts","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","ch0","ch1","DefaultLayoutMode","_LayoutRetryers$Abstr","initialOverflown","LayoutRetryers","hasNextCandidate","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","floatMargins","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","setHeaderNodeContext","headerNodePosition","headerSourceNode","headerViewNode","setFooterNodeContext","footerNodePosition","footerSourceNode","footerViewNode","updateHeight","headerHeight","footerHeight","prepareLayoutFragment","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout","allowInsertRepeatitiveElements","moveChildren","isAfterLastContent","findResultFromCache","afterLastContentNodeCache","isAfterNodeContextOf","lastContentSourceNode","affectedNodeCache","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","previousElementSibling","firstContentSourceNode","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","doneInitialLayout","LayoutFragmentedBlock","LayoutEntireOwnerBlock","doInitialLayout","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","LayoutUtil","appendHeaderToAncestors","repetitiveLayoutProcessor","layoutEntireBlock","TableRow","rowIndex","addCell","cell","cells","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","setHeight","setAnchorSlot","slot","anchorSlot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","getAcceptableCellBreakPositions","acceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","tableSourceNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","rows","getRowSlots","rowSlots","slots","rowUpper","startColIndex","addCellFragment","uniqueCells","tableWidth","getColumnCount","columnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","skipNestedTable","parentDisplay","isNestedInlineTable","EntireTableLayoutStrategy","postLayoutBlockContents","captionView","captions","inHeaderOrFooter","inRow","computedStyle","lastRowViewNode","registerCheckPoint","TableLayoutStrategy","originalStopAtOverflow","resetColumn","getColSpanningCellWidth","colWidths","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","currentRowIndex","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","inHeader","inFooter","currentColumnIndex","registerCellFragmentIndex","tdNodeStep","getElementOffset","startTableCell","afterNodeContext","startNodePosition","ignoreList","table-caption","table-column-group","table-column","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","colGroups","normalizeAndGetColElements","cols","colGroup","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","TableRowLayoutConstraint","collectCellFragmentLayoutConstraints","cellFragmentLayoutConstraints","removeDummyRowNodes","_RepetitiveElementImp4","array","dummyNode","getCellFragemnts","tableLayoutProcessor","mean","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","reduceContainerSize","newEdge","BalanceLastColumnBalancer","totalBlockSize","originalPosition","checkPosition","isLastColumnLongerThanAnyOtherColumn","foundUpperBound","lastColumnBlockSize","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","hasBox","beforeBox","styleValue","getBreakValue","buildAfterPseudoElementBox","afterBox","styleValues","cv","displayValue","isBlockValue","hasBoxValue","BoxStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","atStartStack","isAtFlowStart","encounteredTextNode","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","offsetMap","rootOffset","boxStack","getAttrStyle","postprocessTopStyle","bodyReached","primaryStack","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","rootStyle","elemStyle","isBody","rootBackgroundAssigned","backgroundColor","backgroundProps","backgroundImage","rootLayoutAssigned","columnProps","layoutProps","unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","resetFlowChunkStream","flowListener","flowChunks","encounteredFlowChunk","styleUntilFlowIsReached","flowToReach","idToReach","optionsCV","options","static","lingerCV","priorityCV","breakBeforeValues","flow","registerForcedBreakOffset","forcedBreakOffsets","lookup","targetSlippedOffset","afterPseudoBreakBefore","blockStartOffset","beforePseudoBreakAfter","validator","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","ValidatingGroup","connect","nodeIndex","connections","what","group","clonedNode","connection","groupConnection","nomatch","addSpecialToArr","clause","ALWAYS_FAIL","failure","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","emptyHead","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","ALTERNATE","combine","connectionIndex","REPEATED","OPTIONAL","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","idents","units","NO_IDENTS","ListValidator","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","hasCommaListValidator","FuncValidator","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","validators","rvals","len","ShorthandSyntaxPropertyN","ShorthandSyntaxCompound","index0","ShorthandValidator","setOwner","syntaxNodeForProperty","syntax","propList","receiver","defaultValues","propagateInherit","SimpleShorthandValidator","InsetsShorthandValidator","createSyntaxNode","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","slashIndex","index1","acc","FONT","_SimpleShorthandValid2","familyList","family","systemFonts","ValidatorSet","addReplacement","cssval","newGroup","vals","subgroup","FOLLOW","addCounts","primitive","newFunc","initBuiltInValidators","namedValidators","HASHCOLOR","POS_INT","POS_NUM","POS_PERCENTAGE","%","NEGATIVE","ZERO","ZERO_PERCENTAGE","POS_LENGTH","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","POS_ANGLE","deg","grad","rad","turn","POS_TIME","ms","FREQUENCY","Hz","kHz","RESOLUTION","URI","STRING","stdfont","icon","menu","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","prefixes","parseValidators","expectval","setop","currop","builtIn","parseDefaults","parseShorthands","shorthands","insetShorthand","compound","makePropSet","shorthand","pval","origName","rvalue","baseValidatorSet","traitProps","bogusFontData","bogusFontCounter","prepareProperties","properties","Face","fontTraitKey","traitsEqual","makeAtRule","fontBytes","blobURL","webkitURL","createObjectURL","blobURLs","blobs","DocumentFaces","deobfuscator","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromSrc","familyMap","viewFamilyFromView","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","familyPrefix","getViewFontFamily","documentFaces","viewFamily","familyCounter","initFont","viewFontFace","killTime","bogusData","probeCont","initWidth","initHeight","loaded","loadFont","srcURLMap","viewFaceParam","BLOB","findOrLoadFonts","srcFaces","keyCount","PageBox","_scope","parentInstance","param","copySpecified","specified","destSpecified","cloneChildren","RootPageBox","PageMasterScope","pageMaster","isFunc","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","PageMasterInstance","resetScope","PartitionGroup","PartitionGroupInstance","Partition","PartitionInstance","toExprAuto","toExprZero","toExprZeroAuto","toExprZeroBorder","styleVal","toExprBool","PageBoxInstance","pageBox","calculatedWidth","calculatedHeight","addNamedValues","namedValues","altName","namedFuncs","columnGap","initEnabled","minPageWidth","minPageHeight","boxSpecificEnabled","initHorizontal","parentWidth","leftBP","rightBP","extra","autoWidth","isAutoWidth","remains","initVertical","parentHeight","topBP","bottomBP","autoHeight","isAutoHeight","initColumns","depends","registerInstance","getActiveRegions","getPropAsNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","assignLeftPosition","assignRightPosition","xpos","snapOffsetX","assignTopPosition","ypos","snapOffsetY","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","isTopDependentOnAutoHeight","sizeWithMaxWidth","isRightDependentOnAutoWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","readWidth","bbox","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","RootPageBoxInstance","_PageBoxInstance","pageMasterInstance","adjustPageLayout","processPartitionList","listVal","conflicting","qname","term","required","pmEnabledVal","pmEnabled","_PageBoxInstance4","PageBoxParserHandler","PartitionParserHandler","PartitionGroupParserHandler","partition","partitionGroup","PageMasterParserHandler","resolvePageProgression","Constants","CornerMarkPosition","CrossMarkPosition","pageSizes","a5","a4","a3","b5","b4","jis-b5","jis-b4","letter","legal","ledger","defaultPrinterMarkLineWidth","defaultPrinterMarkOffset","defaultPrinterMarkLineLength","defaultBleedOffset","resolvePageSizeAndBleed","pageSizeAndBleed","bleed","bleedOffset","val1","marks","evaluatePageSizeAndBleed","evaluated","cropOffset","createPrinterMarkSvg","createPrinterMarkElement","lineWidth","elementType","MarginBoxPositionAlongVariableDimension","propertiesAppliedToPartition","outline","outline-width","outline-style","outline-color","pageMarginBoxes","top-left-corner","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","top-left","START","top-center","CENTER","top-right","top-right-corner","right-top","right-middle","right-bottom","bottom-right-corner","bottom-right","bottom-center","bottom-left","bottom-left-corner","left-bottom","left-middle","left-top","pageMarginBoxNames","PageRuleMaster","pageSize","PageRulePartition","bodyPartitionKey","createPageMarginBoxes","applySpecified","marginBoxesMap","_marginBoxes","PageMarginBoxPartition","PageRuleMasterInstance","PageRulePartitionInstance","marginBoxName","ownStyle","ownVal","PageMarginBoxPartitionInstance","pageRuleMaster","_PageMaster$PageMaste2","setPageAreaDimension","pageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","marginBoxes","horizontalDimensions","verticalDimensions","sizeMarginBoxesAlongVariableDimension","isHorizontal","containers","boxInstances","boxParams","boxInfo","pageMarginBoxInstances","boxParam","SingleBoxMarginBoxSizingParam","evaluatedDim","getSizesOfMarginBoxesAlongVariableDimension","needRecalculate","maxOuterSizes","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","minOuterSizes","minSize","evaluatedMinSize","startEndSum","outerSize","availableSize","startBoxParam","centerBoxParam","endBoxParam","startEndBoxParam","MultipleBoxesMarginBoxSizingParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","hasAutoSize_","fixedSize","pageRulePartition","_PageMaster$Partition3","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","extentName","pageExtent","paddingStart","paddingEnd","borderStartWidth","borderEndWidth","pageMarginBoxPartition","applyVerticalAlign","_PageMaster$Partition4","flexAlign","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","insideName","outsideName","outside","pageMargin","marginInside","marginOutside","paddingInside","paddingOutside","borderInsideWidth","borderOutsideWidth","getComputedValues","pageMarginValue","borderAndPadding","PageManager","rootPageBoxInstance","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","pageMasterCache","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","newPageMaster","pageMasterStyle","CheckPageTypeAction","IsFirstPageAction","IsLeftPageAction","IsRightPageAction","IsRectoPageAction","IsVersoPageAction","IsNthPageAction","layoutPositionAtPageStart","blankPageAtStart","ApplyPageRuleAction","targetMap","boxName","targetBox","PageParserHandler","pageProps","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","currentPageSelectors","_CssCascade$CascadePa","selector","noPageSelectorProps","prevCascVal","marginBoxMap","boxStyle","PageMarginBoxParserHandler","transformURIs","attributeValue","m1","namespacePrefixMap","frontEdgeBlackListHor","margin-top","padding-top","border-top-width","border-top-style","border-top-color","border-top-left-radius","border-top-right-radius","frontEdgeBlackListVert","margin-right","padding-right","border-right-width","border-right-style","border-right-color","border-bottom-right-radius","frontEdgeUnforcedBreakBlackListHor","frontEdgeUnforcedBreakBlackListVert","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","att","shadowStyler","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","refStyler","getStylerForDoc","createShadows","templateURLVal","template","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","sname","inheritLangAttribute","transferPolyfilledInheritedProps","POLYFILLED_INHERITED_PROPS","numericVal","resolveFormattingContext","createElementView","needToProcessChildren","inheritedValues","shadowParam","parentWritingMode","isFlowRoot","floating","listItem","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","processRepeatOnBreak","findAndProcessRepeatingElements","custom","tag","NCX","navParent","hp","behavior","dataset","iframe","contentWindow","navigator","epubReadingSystem","version","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","attrWidth","attrHeight","hasAutoWidth","hasAutoHeight","attributes","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","image","Image","isSVGUrlAttribute","Urls","attributePrefix","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","blackList","isAtForcedBreak","modifyElemDimensionWithImageResolution","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinWidth","numericMinHeight","PREPROCESS_ELEMENT_STYLE","createTextNodeView","preprocessTextContent","Diff","originl","PREPROCESS_TEXT_CONTENT","processedText","createNodeView","processChildren","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","isRelativePositioned","propertiesNotPassedToDOM","fixRubyTextFontSize","userAgent","fontSizeInPx","parentElem","_this$nodeContext","_this$nodeContext$par","getComputedStyle","HTMLElement","minFontSizeInPx","pn","childComputedStyle","boxDecorationBreak","step1","step2","elem2","parentElement","nodePosition1","nodePosition2","DOMParserSupportedType","box-decoration-break","float-min-wrap-block","float-reference","flow-into","flow-options","footnote-policy","DefaultClientLayout","layoutBox","subtractOffsets","originRect","viewportLeft","viewportTop","rects","getClientRects","layoutBoxRect","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","resetZoom","XMLDocHolder","NodeList","offsetStr","srcNode","getTotalOffset","totalOffset","buildIdMap","idMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","errorTagName","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","predicate","check","withAttribute","Predicate","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","uaStylesheetBaseFetcher","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","currentLayoutPosition","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","scaleFactor","defaultFontSize","widthVal","heightVal","StyleInstance","defaultLang","fontMapper","faces","Font","rootPageFloatLayoutContext","CssStyler","stylerMap","CssPage","matchStartPageSide","pageManager","fontFace","pageSheetSize","isRectoStart","isLTR","getStyleForDoc","pageBoxInstances","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","currentPosition","consumedOffset","dumpLocation","updateStartSide","flowChunkBreakBefore","flowBreakAfter","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","breakOffsetBeforeStart","parentFlowPosition","parentStartOffset","setFormattingContextToColumn","layoutDeferredPageFloats","deferredFloatNode","deferredFloatOffset","pageStartPos","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","createAndLayoutColumn","forceNonFitting","dontApplyExclusions","boxContainer","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","columnY","columnX","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","lastColumn","Vgen","pageBreaks","dontExclude","forwardOrderInLayout","removed","innerContainerTag","innerContainer","suppressEmptyBoxGeneration","outerShape","processLinger","startPage","noMorePrimaryFlows","layoutNextPage","bleedBoxPaddingEdge","evaluatedPageSizeAndBleed","setPageSizeAndBleed","printerMarkOffset","bgcolor","cropMarkLineLength","bleedMarkLineLength","maxLineLength","svgWidth","points1","points2","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","line1","line2","longLineLength","BOTTOM","horizontalLine","verticalLine","opposite","LEFT","RIGHT","isLeftPage","getTriggersForDoc","pageSheetWidth","pageSheetHeight","BaseParserHandler","masterHandler","insideRegion","pageHandler","regionCount","regionHandler","processViewportMeta","meta","StyleParserHandler","cascadeParserHandler","parseOPSResource","OPSDocStore","authorStyleSheets","userStyleSheets","setStyleSheets","userAgentXML","triggerSingleDocumentPreprocessing","styleByDocURL","triggersByDocURL","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","styleSheets","stylesheet","XmlDoc","PREPROCESS_SINGLE_DOCUMENT","triggerList","getElementsByTagNameNS","triggerElem","EV","sources","userAgentURL","title","rel","styleByKey","styleFetcherByKey","sph","source","encode32","decode32","bytes","bytesToSHA1Int32","appendCount","w","bi","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","anchorElem","showTOC","nonTocBoxDoc","viewportSize","OPS","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","ce","adaptClass","elem1","stopPropagation","EPUBDocStore","makeDeobfuscatorFactory","plainXMLStore","jsonStore","deobfuscators","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","loadOPF","manifestObj","reportLoadError","OPFDoc","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfByURL","opfXML","encXML","zipMetadata","initWithXMLDoc","primaryOPFByEPubURL","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","documents","domain","removePath","startsWith","OPFItem","itemProperties","initWithElement","itemElem","opfURL","mediaType","propStr","initWithParam","skipPagesBefore","getOPFItemId","predefinedPrefixes","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","i1","_r1$metaTerms$display","i2","_r2$metaTerms$display","getMathJaxHub","math","MathJax","Hub","PageViewMode","supportedMediaTypes","application/xhtml+xml","image/jpeg","image/png","image/svg+xml","image/gif","audio/mp3","createDocumentURLTransformer","MATHML","path","items","restoreURL","encoded","getMetadata","metadata","getPathFromURL","epubBaseURL","manifestURL","pkg","uidref","uidElem","uid","srcToFallbackId","fallback","nav","cover","itemMap","itemMapByPath","fallbackSrc","spine","itemRefElement","tocAttr","ncxToc","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","bindings","mroot","prefixMap","resolveProperty","iri","rawItems","refines","scheme","DC","rawItemsByTarget","rawItem","makeMetadata","entryMap","sortMetadata","prePaginated","sha1Sum","blob","webkitSlice","fileReader","FileReader","readAsArrayBuffer","dataView","DataView","byteLength","getUint8","setUint8","assignAutoPages","manifestText","obfuscations","obfuscationKey","sha1","encodedPath","compressed","compressedSize","obfuscation","DEFAULT","epage","epageCount","epageCountCallback","setEPageCountMode","epageIsRenderedPage","countEPages","offsetPerEPage","initWithChapters","itemref","readingProgression","primaryEntryPath","readingOrder","encodeURI","hrefNoFragment","itemCount","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","_this12$items","getCFI","offsetInItem","cfi","CFI","resolveFragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","makePageAndPosition","OPFView","pageSheetSizeReporter","Counters","getPage","viewItem","spineItems","getCurrentPageProgression","finishPageContainer","oldPage","isFirstPage","prevItem","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","isLastPage","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","spineItemLoadingContinuations","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","thisPage","otherPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","matrix","cssMatrix","makeObjectView","handlerSrc","srcParam","typeParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","Push","tagName","newUrl","mathTypeset","loadingContinuations","epubSpineProperties","pageCounterOffset","_this27$spineItems$","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","tocAutohide","tocView","Toc","tocWidth","tocHeight","ZoomType","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","needResize","pageReplacedListener","hyperlinkListener","pageRuleStyleElement","loadPublication","loadXML","configure","moveTo","addLogListeners","LOADING","packageURL","touchActive","touchX","touchY","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","SINGLE_PAGE","waitForLoading","logLevel","setReadyState","command","Profile","zipmeta","authorStyleSheet","userStyleSheet","Epub","render","resolvedParams","cancelRenderingTask","resize","resolveLength","matched","autoresize","vp","userAgentRootURL","rootURL","configurePlugins","CONFIGURATION","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","leftWidth","rightWidth","reportPosition","sendLocationNotification","createViewport","vs","resolveSpreadView","SPREAD","AUTO_SPREAD","updateSpreadView","sizeIsGood","spreadViewChanged","opfView","setPageSize","setPageSizePageRules","pageSheetSizeAlreadySet","styleText","removePageSizePageRules","tocVisible","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","queryZoomFactor","FIT_INSIDE_VIEWPORT","pageDim","renderTask","RenderingCanceledError","resizeTask","INTERACTIVE","notification","COMPLETE","method","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","frameInternal","adapt_command","setPrototypeOf","convertViewerOptions","Navigation","CoreViewer","settings","opt_options","adaptViewer_","dispatcher","autoResize","pageBorderWidth","setOptions","eventTarget","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","documentOptions","convertStyleSheetArray","convertSingleDocumentOptions","documentObject","initialized","resolveNavigation","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","toNumberOrNull","opt","isArray","VivliostylePrint","htmlDoc","printCallback","iframeWin","hideIframe","removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","Promise","config","html","css","printHTML"],"mappings":"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VA,qBACAA,iBACAA,qBACAA,mBACAA,mBACAA,uBACAA,yBACAA,iBACAA,sBACAA,sBACAA,oBACAA,oBACAA,sBACAA,sBACAA,kBACAA,sBACAA,sBACAA,0BACAA,gBACAA,gBACAA,gBACAA,sBACAA,gBACAA,sBACAA,sBACAA,sBACAA,sBACAA,wBACAA,kBACAA,kBACAA,sBACAA,oBACAA,oBACAA,kBACAA,wBACAA,wBACAA,wBACAA,oBACAA,oBACAA,wBACAA,wBACAA,0BACAA,0BACAA,0BAGAA,wBACAA,0BAGAA,0BACAA,0BACAA,0BACAA,0BACAA,oBACAA,wBACAA,0BACAA,wBACAA,0BACAA,wBACAA,sBACAA,sBACAA,0BACAA,wBACAA,sBACAA,sBACAA,kBACAA,oBACAA,oBACAA,wBACAA,0BACAA,wBACAA,sBACAA,0BACAA,0BACAA,0BACAA,0BACAA,wBACAA,wBACAA,0BACAA,0BACAA,sBACAA,kBAnFF,CAAYA,KAAAA,YAsGCQ,GAA0B,CACrCR,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOS,MACPT,GAAOS,MACPT,GAAOO,QACPP,GAAOS,MACPT,GAAOS,MACPT,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOO,QACPP,GAAOS,MACPT,GAAOU,KACPV,GAAOW,KACPX,GAAOY,KACPZ,GAAOa,OACPb,GAAOc,QACPd,GAAOe,IACPf,GAAOgB,KACPhB,GAAOiB,MACPjB,GAAOkB,MACPlB,GAAOmB,KACPnB,GAAOoB,KACPpB,GAAOqB,MACPrB,GAAOsB,MACPtB,GAAOuB,IACPvB,GAAOwB,MACPxB,GAAOyB,IACPzB,GAAO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,CACR,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,MAISnC,GAAsB,CACjCoC,MAAO,MACPC,MAAO,MACPC,MAAO,SACPC,QAAS,aAGE72C,GAAQ,CACnB82C,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACR91C,KAAM,IAmEKi0C,GAAwC,CACnDN,UACAF,OAAQ,aACRG,QA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"}